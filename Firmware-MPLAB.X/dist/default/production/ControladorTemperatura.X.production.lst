

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 20 17:35:59 2024

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           ; Version 1.45
    44                           ; Generated 16/11/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     _LATEbits	set	3981
    78  0000                     _TRISEbits	set	3990
    79  0000                     _TRISD	set	3989
    80  0000                     _PORTD	set	3971
    81  0000                     _PORTCbits	set	3970
    82  0000                     _ADCON2	set	4032
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADCON1	set	4033
    85  0000                     _RCONbits	set	4048
    86  0000                     _T0CON	set	4053
    87  0000                     _SPBRG	set	4015
    88  0000                     _SPBRGH	set	4016
    89  0000                     _BAUDCONbits	set	4024
    90  0000                     _RCSTAbits	set	4011
    91  0000                     _INTCON2bits	set	4081
    92  0000                     _TRISCbits	set	3988
    93  0000                     _TRISB	set	3987
    94  0000                     _TRISAbits	set	3986
    95  0000                     _INTCON3bits	set	4080
    96  0000                     _TXREG	set	4013
    97  0000                     _TXSTAbits	set	4012
    98  0000                     _TMR0L	set	4054
    99  0000                     _TMR0H	set	4055
   100  0000                     _INTCONbits	set	4082
   101  0000                     _ADRESL	set	4035
   102  0000                     _ADCON0bits	set	4034
   103  0000                     _ADRESH	set	4036
   104                           
   105                           	psect	smallconst
   106  000800                     __psmallconst:
   107                           	opt stack 0
   108  000800  00                 	db	0
   109  000801                     STR_1:
   110  000801  44                 	db	68	;'D'
   111  000802  65                 	db	101	;'e'
   112  000803  73                 	db	115	;'s'
   113  000804  65                 	db	101	;'e'
   114  000805  6A                 	db	106	;'j'
   115  000806  61                 	db	97	;'a'
   116  000807  64                 	db	100	;'d'
   117  000808  61                 	db	97	;'a'
   118  000809  20                 	db	32
   119  00080A  3D                 	db	61	;'='
   120  00080B  20                 	db	32
   121  00080C  00                 	db	0
   122  00080D                     STR_2:
   123  00080D  41                 	db	65	;'A'
   124  00080E  74                 	db	116	;'t'
   125  00080F  75                 	db	117	;'u'
   126  000810  61                 	db	97	;'a'
   127  000811  6C                 	db	108	;'l'
   128  000812  20                 	db	32
   129  000813  3D                 	db	61	;'='
   130  000814  20                 	db	32
   131  000815  00                 	db	0
   132                           
   133                           ; #config settings
   134  000816  00                 	db	0	; dummy byte at the end
   135  0000                     
   136                           	psect	cinit
   137  00143A                     __pcinit:
   138                           	opt stack 0
   139  00143A                     start_initialization:
   140                           	opt stack 0
   141  00143A                     __initialization:
   142                           	opt stack 0
   143                           
   144                           ; Clear objects allocated to BANK0 (13 bytes)
   145  00143A  EE00  F0A1         	lfsr	0,__pbssBANK0
   146  00143E  0E0D               	movlw	13
   147  001440                     clear_0:
   148  001440  6AEE               	clrf	postinc0,c
   149  001442  06E8               	decf	wreg,f,c
   150  001444  E1FD               	bnz	clear_0
   151                           
   152                           ; Clear objects allocated to COMRAM (29 bytes)
   153  001446  EE00  F026         	lfsr	0,__pbssCOMRAM
   154  00144A  0E1D               	movlw	29
   155  00144C                     clear_1:
   156  00144C  6AEE               	clrf	postinc0,c
   157  00144E  06E8               	decf	wreg,f,c
   158  001450  E1FD               	bnz	clear_1
   159  001452                     end_of_initialization:
   160                           	opt stack 0
   161  001452                     __end_of__initialization:
   162                           	opt stack 0
   163  001452  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   164  001454  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   165  001456  0E00               	movlw	low (__Lsmallconst shr (0+16))
   166  001458  6EF8               	movwf	tblptru,c
   167  00145A  0E08               	movlw	high __Lsmallconst
   168  00145C  6EF7               	movwf	tblptrh,c
   169  00145E  0100               	movlb	0
   170  001460  EF0C  F004         	goto	_main	;jump to C main() function
   171                           tblptru	equ	0xFF8
   172                           tblptrh	equ	0xFF7
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  000026                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000026                     _unidadeDes:
   180                           	opt stack 0
   181  000026                     	ds	4
   182  00002A                     _dezenaDes:
   183                           	opt stack 0
   184  00002A                     	ds	4
   185  00002E                     _aux:
   186                           	opt stack 0
   187  00002E                     	ds	4
   188  000032                     _unidade:
   189                           	opt stack 0
   190  000032                     	ds	4
   191  000036                     _dezena:
   192                           	opt stack 0
   193  000036                     	ds	4
   194  00003A                     _centena:
   195                           	opt stack 0
   196  00003A                     	ds	4
   197  00003E                     _milhar:
   198                           	opt stack 0
   199  00003E                     	ds	4
   200  000042                     _tempDesejada:
   201                           	opt stack 0
   202  000042                     	ds	1
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           
   208                           	psect	bssBANK0
   209  0000A1                     __pbssBANK0:
   210                           	opt stack 0
   211  0000A1                     _resultadoAD:
   212                           	opt stack 0
   213  0000A1                     	ds	4
   214  0000A5                     _leituraAD:
   215                           	opt stack 0
   216  0000A5                     	ds	4
   217  0000A9                     _tempMin:
   218                           	opt stack 0
   219  0000A9                     	ds	1
   220  0000AA                     _valorAD:
   221                           	opt stack 0
   222  0000AA                     	ds	4
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           
   228                           	psect	cstackBANK0
   229  000060                     __pcstackBANK0:
   230                           	opt stack 0
   231  000060                     i1___lldiv@quotient:
   232                           	opt stack 0
   233                           
   234                           ; 4 bytes @ 0x0
   235  000060                     	ds	4
   236  000064                     i1___lldiv@counter:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x4
   240  000064                     	ds	1
   241  000065                     ??_HighPriorityISR:
   242                           
   243                           ; 1 bytes @ 0x5
   244  000065                     	ds	21
   245  00007A                     ??_DelayPORXLCD:
   246  00007A                     ??_DelayXLCD:
   247  00007A                     ?___lmul:
   248                           	opt stack 0
   249  00007A                     SetDDRamAddr@DDaddr:
   250                           	opt stack 0
   251  00007A                     WriteCmdXLCD@cmd:
   252                           	opt stack 0
   253  00007A                     WriteDataXLCD@data:
   254                           	opt stack 0
   255  00007A                     ___lmul@multiplier:
   256                           	opt stack 0
   257                           
   258                           ; 4 bytes @ 0x1A
   259  00007A                     	ds	1
   260  00007B                     OpenXLCD@lcdtype:
   261                           	opt stack 0
   262  00007B                     putsXLCD@buffer:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x1B
   266  00007B                     	ds	2
   267  00007D                     
   268                           ; 1 bytes @ 0x1D
   269  00007D                     	ds	1
   270  00007E                     ___lmul@multiplicand:
   271                           	opt stack 0
   272                           
   273                           ; 4 bytes @ 0x1E
   274  00007E                     	ds	4
   275  000082                     ___lmul@product:
   276                           	opt stack 0
   277                           
   278                           ; 4 bytes @ 0x22
   279  000082                     	ds	4
   280  000086                     ?___lldiv:
   281                           	opt stack 0
   282  000086                     ___lldiv@dividend:
   283                           	opt stack 0
   284                           
   285                           ; 4 bytes @ 0x26
   286  000086                     	ds	4
   287  00008A                     ___lldiv@divisor:
   288                           	opt stack 0
   289                           
   290                           ; 4 bytes @ 0x2A
   291  00008A                     	ds	4
   292  00008E                     ___lldiv@quotient:
   293                           	opt stack 0
   294                           
   295                           ; 4 bytes @ 0x2E
   296  00008E                     	ds	4
   297  000092                     ___lldiv@counter:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x32
   301  000092                     	ds	1
   302  000093                     ??_setTemperaturaAmbiente:
   303                           
   304                           ; 1 bytes @ 0x33
   305  000093                     	ds	2
   306  000095                     setTemperaturaAmbiente@index:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x35
   310  000095                     	ds	2
   311  000097                     ??_main:
   312                           
   313                           ; 1 bytes @ 0x37
   314  000097                     	ds	8
   315  00009F                     main@index:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x3F
   319  00009F                     	ds	2
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           
   325                           	psect	cstackCOMRAM
   326  000001                     __pcstackCOMRAM:
   327                           	opt stack 0
   328  000001                     ?i2___awdiv:
   329                           	opt stack 0
   330  000001                     ?i2___awmod:
   331                           	opt stack 0
   332  000001                     i2WriteCmdXLCD@cmd:
   333                           	opt stack 0
   334  000001                     i2WriteDataXLCD@data:
   335                           	opt stack 0
   336  000001                     i2___awdiv@dividend:
   337                           	opt stack 0
   338  000001                     i2___awmod@dividend:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x0
   342  000001                     	ds	2
   343  000003                     i2___awdiv@divisor:
   344                           	opt stack 0
   345  000003                     i2___awmod@divisor:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x2
   349  000003                     	ds	2
   350  000005                     i2___awdiv@counter:
   351                           	opt stack 0
   352  000005                     i2___awmod@counter:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x4
   356  000005                     	ds	1
   357  000006                     i2___awdiv@sign:
   358                           	opt stack 0
   359  000006                     i2___awmod@sign:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x5
   363  000006                     	ds	1
   364  000007                     i2___awdiv@quotient:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x6
   368  000007                     	ds	2
   369  000009                     ??_LowPriorityISR:
   370                           
   371                           ; 1 bytes @ 0x8
   372  000009                     	ds	20
   373  00001D                     ?___awdiv:
   374                           	opt stack 0
   375  00001D                     ?___awmod:
   376                           	opt stack 0
   377  00001D                     ?___llmod:
   378                           	opt stack 0
   379  00001D                     ?i1___lldiv:
   380                           	opt stack 0
   381  00001D                     i1WriteCmdXLCD@cmd:
   382                           	opt stack 0
   383  00001D                     i1WriteDataXLCD@data:
   384                           	opt stack 0
   385  00001D                     ___awdiv@dividend:
   386                           	opt stack 0
   387  00001D                     ___awmod@dividend:
   388                           	opt stack 0
   389  00001D                     ___llmod@dividend:
   390                           	opt stack 0
   391  00001D                     i1___lldiv@dividend:
   392                           	opt stack 0
   393                           
   394                           ; 4 bytes @ 0x1C
   395  00001D                     	ds	2
   396  00001F                     ___awdiv@divisor:
   397                           	opt stack 0
   398  00001F                     ___awmod@divisor:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x1E
   402  00001F                     	ds	2
   403  000021                     ___awdiv@counter:
   404                           	opt stack 0
   405  000021                     ___awmod@counter:
   406                           	opt stack 0
   407  000021                     ___llmod@divisor:
   408                           	opt stack 0
   409  000021                     i1___lldiv@divisor:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0x20
   413  000021                     	ds	1
   414  000022                     ___awdiv@sign:
   415                           	opt stack 0
   416  000022                     ___awmod@sign:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x21
   420  000022                     	ds	1
   421  000023                     ___awdiv@quotient:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x22
   425  000023                     	ds	2
   426  000025                     ___llmod@counter:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x24
   430  000025                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           postinc0	equ	0xFEE
   434                           wreg	equ	0xFE8
   435                           
   436 ;;
   437 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   438 ;;
   439 ;; *************** function _main *****************
   440 ;; Defined at:
   441 ;;		line 161 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;  index           2   63[BANK0 ] int 
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   455 ;;      Params:         0       0       0       0       0       0       0       0       0
   456 ;;      Locals:         0       2       0       0       0       0       0       0       0
   457 ;;      Temps:          0       8       0       0       0       0       0       0       0
   458 ;;      Totals:         0      10       0       0       0       0       0       0       0
   459 ;;Total ram usage:       10 bytes
   460 ;; Hardware stack levels required when called:    9
   461 ;; This function calls:
   462 ;;		_OpenXLCD
   463 ;;		_WriteCmdXLCD
   464 ;;		___lldiv
   465 ;;		___lmul
   466 ;;		_putsXLCD
   467 ;;		_setTemperaturaAmbiente
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text0
   474  000818                     __ptext0:
   475                           	opt stack 0
   476  000818                     _main:
   477                           	opt stack 22
   478                           
   479                           ;main.c: 163: TRISAbits.TRISA0 = 1;
   480                           
   481                           ;incstack = 0
   482  000818  8092               	bsf	3986,0,c	;volatile
   483                           
   484                           ;main.c: 164: TRISB = 0x06;
   485  00081A  0E06               	movlw	6
   486  00081C  6E93               	movwf	3987,c	;volatile
   487                           
   488                           ;main.c: 165: TRISCbits.RC1 = 0;
   489  00081E  9294               	bcf	3988,1,c	;volatile
   490                           
   491                           ;main.c: 166: TRISCbits.RC2 = 0;
   492  000820  9494               	bcf	3988,2,c	;volatile
   493                           
   494                           ;main.c: 167: TRISCbits.RC6 = 0;
   495  000822  9C94               	bcf	3988,6,c	;volatile
   496                           
   497                           ;main.c: 168: TRISCbits.RC7 = 1;
   498  000824  8E94               	bsf	3988,7,c	;volatile
   499                           
   500                           ;main.c: 170: INTCON2bits.RBPU = 0;
   501  000826  9EF1               	bcf	intcon2,7,c	;volatile
   502                           
   503                           ;main.c: 173: TXSTAbits.BRGH = 0;
   504  000828  94AC               	bcf	4012,2,c	;volatile
   505                           
   506                           ;main.c: 174: TXSTAbits.SYNC = 0;
   507  00082A  98AC               	bcf	4012,4,c	;volatile
   508                           
   509                           ;main.c: 175: TXSTAbits.TXEN = 1;
   510  00082C  8AAC               	bsf	4012,5,c	;volatile
   511                           
   512                           ;main.c: 176: RCSTAbits.SPEN = 1;
   513  00082E  8EAB               	bsf	4011,7,c	;volatile
   514                           
   515                           ;main.c: 177: BAUDCONbits.BRG16 = 1;
   516  000830  86B8               	bsf	4024,3,c	;volatile
   517                           
   518                           ;main.c: 179: SPBRGH = 0;
   519  000832  0E00               	movlw	0
   520  000834  6EB0               	movwf	4016,c	;volatile
   521                           
   522                           ;main.c: 180: SPBRG = 64;
   523  000836  0E40               	movlw	64
   524  000838  6EAF               	movwf	4015,c	;volatile
   525                           
   526                           ;main.c: 183: TMR0H = 0x67;
   527  00083A  0E67               	movlw	103
   528  00083C  6ED7               	movwf	4055,c	;volatile
   529                           
   530                           ;main.c: 184: TMR0L = 0x6A;
   531  00083E  0E6A               	movlw	106
   532  000840  6ED6               	movwf	4054,c	;volatile
   533                           
   534                           ;main.c: 185: T0CON = 0x96;
   535  000842  0E96               	movlw	150
   536  000844  6ED5               	movwf	4053,c	;volatile
   537                           
   538                           ;main.c: 188: INTCONbits.TMR0IF = 0;
   539  000846  94F2               	bcf	intcon,2,c	;volatile
   540                           
   541                           ;main.c: 189: INTCON2bits.TMR0IP = 0;
   542  000848  94F1               	bcf	intcon2,2,c	;volatile
   543                           
   544                           ;main.c: 190: INTCONbits.TMR0IE = 1;
   545  00084A  8AF2               	bsf	intcon,5,c	;volatile
   546                           
   547                           ;main.c: 193: INTCON3bits.INT2IF = 0;
   548  00084C  92F0               	bcf	intcon3,1,c	;volatile
   549                           
   550                           ;main.c: 194: INTCON2bits.INTEDG2 = 0;
   551  00084E  98F1               	bcf	intcon2,4,c	;volatile
   552                           
   553                           ;main.c: 195: INTCON3bits.INT2IE = 1;
   554  000850  88F0               	bsf	intcon3,4,c	;volatile
   555                           
   556                           ;main.c: 196: INTCON3bits.INT2IP = 1;
   557  000852  8EF0               	bsf	intcon3,7,c	;volatile
   558                           
   559                           ;main.c: 198: INTCON3bits.INT1IF = 0;
   560  000854  90F0               	bcf	intcon3,0,c	;volatile
   561                           
   562                           ;main.c: 199: INTCON2bits.INTEDG1 = 0;
   563  000856  9AF1               	bcf	intcon2,5,c	;volatile
   564                           
   565                           ;main.c: 200: INTCON3bits.INT1IE = 1;
   566  000858  86F0               	bsf	intcon3,3,c	;volatile
   567                           
   568                           ;main.c: 201: INTCON3bits.INT1IP = 1;
   569  00085A  8CF0               	bsf	intcon3,6,c	;volatile
   570                           
   571                           ;main.c: 204: RCONbits.IPEN = 1;
   572  00085C  8ED0               	bsf	4048,7,c	;volatile
   573                           
   574                           ;main.c: 205: INTCONbits.GIEH = 1;
   575  00085E  8EF2               	bsf	intcon,7,c	;volatile
   576                           
   577                           ;main.c: 206: INTCONbits.GIEL = 1;
   578  000860  8CF2               	bsf	intcon,6,c	;volatile
   579                           
   580                           ;main.c: 209: ADCON1 = 0x0E;
   581  000862  0E0E               	movlw	14
   582  000864  6EC1               	movwf	4033,c	;volatile
   583                           
   584                           ;main.c: 210: ADCON0 = 0x01;
   585  000866  0E01               	movlw	1
   586  000868  6EC2               	movwf	4034,c	;volatile
   587                           
   588                           ;main.c: 211: ADCON2 = 0x95;
   589  00086A  0E95               	movlw	149
   590  00086C  6EC0               	movwf	4032,c	;volatile
   591                           
   592                           ;main.c: 212: _delay((unsigned long)((10)*(20000000/4000000.0)));
   593  00086E  0E10               	movlw	16
   594  000870                     u1647:
   595  000870  2EE8               	decfsz	wreg,f,c
   596  000872  D7FE               	bra	u1647
   597  000874  D000               	nop2	
   598                           
   599                           ;main.c: 215: OpenXLCD(0b00101100 & 0b00111000);
   600  000876  0E28               	movlw	40
   601  000878  ECD5  F006         	call	_OpenXLCD
   602                           
   603                           ;main.c: 216: WriteCmdXLCD(0x01);
   604  00087C  0E01               	movlw	1
   605  00087E  EC47  F009         	call	_WriteCmdXLCD
   606                           
   607                           ;main.c: 217: _delay((unsigned long)((2)*(20000000/4000.0)));
   608  000882  0E0D               	movlw	13
   609  000884  0100               	movlb	0	; () banked
   610  000886  6F97               	movwf	??_main& (0+255),b
   611  000888  0EFB               	movlw	251
   612  00088A                     u1657:
   613  00088A  2EE8               	decfsz	wreg,f,c
   614  00088C  D7FE               	bra	u1657
   615  00088E  2F97               	decfsz	??_main& (0+255),f,b
   616  000890  D7FC               	bra	u1657
   617  000892  D000               	nop2	
   618                           
   619                           ;main.c: 218: WriteCmdXLCD(0x0C);
   620  000894  0E0C               	movlw	12
   621  000896  EC47  F009         	call	_WriteCmdXLCD
   622                           
   623                           ;main.c: 220: WriteCmdXLCD(0x80);
   624  00089A  0E80               	movlw	128
   625  00089C  EC47  F009         	call	_WriteCmdXLCD
   626                           
   627                           ;main.c: 221: putsXLCD("Desejada = ");
   628  0008A0  0E01               	movlw	low STR_1
   629  0008A2  0100               	movlb	0	; () banked
   630  0008A4  6F7B               	movwf	putsXLCD@buffer& (0+255),b
   631  0008A6  0E08               	movlw	high STR_1
   632  0008A8  6F7C               	movwf	(putsXLCD@buffer+1)& (0+255),b
   633  0008AA  EC02  F00A         	call	_putsXLCD	;wreg free
   634                           
   635                           ;main.c: 223: WriteCmdXLCD(0xC0);
   636  0008AE  0EC0               	movlw	192
   637  0008B0  EC47  F009         	call	_WriteCmdXLCD
   638                           
   639                           ;main.c: 224: putsXLCD("Atual = ");
   640  0008B4  0E0D               	movlw	low STR_2
   641  0008B6  0100               	movlb	0	; () banked
   642  0008B8  6F7B               	movwf	putsXLCD@buffer& (0+255),b
   643  0008BA  0E08               	movlw	high STR_2
   644  0008BC  6F7C               	movwf	(putsXLCD@buffer+1)& (0+255),b
   645  0008BE  EC02  F00A         	call	_putsXLCD	;wreg free
   646                           
   647                           ;main.c: 226: setTemperaturaAmbiente();
   648  0008C2  EC1D  F006         	call	_setTemperaturaAmbiente	;wreg free
   649  0008C6                     l146:
   650                           
   651                           ;main.c: 229: valorAD = 0;
   652  0008C6  0E00               	movlw	0
   653  0008C8  0100               	movlb	0	; () banked
   654  0008CA  6FAA               	movwf	_valorAD& (0+255),b
   655  0008CC  0E00               	movlw	0
   656  0008CE  6FAB               	movwf	(_valorAD+1)& (0+255),b
   657  0008D0  0E00               	movlw	0
   658  0008D2  6FAC               	movwf	(_valorAD+2)& (0+255),b
   659  0008D4  0E00               	movlw	0
   660  0008D6  6FAD               	movwf	(_valorAD+3)& (0+255),b
   661                           
   662                           ;main.c: 230: leituraAD = 0;
   663  0008D8  0E00               	movlw	0
   664  0008DA  6FA5               	movwf	_leituraAD& (0+255),b
   665  0008DC  0E00               	movlw	0
   666  0008DE  6FA6               	movwf	(_leituraAD+1)& (0+255),b
   667  0008E0  0E00               	movlw	0
   668  0008E2  6FA7               	movwf	(_leituraAD+2)& (0+255),b
   669  0008E4  0E00               	movlw	0
   670  0008E6  6FA8               	movwf	(_leituraAD+3)& (0+255),b
   671                           
   672                           ;main.c: 233: for(int index = 0; index < 10; index++) {
   673  0008E8  0E00               	movlw	0
   674  0008EA  6FA0               	movwf	(main@index+1)& (0+255),b
   675  0008EC  0E00               	movlw	0
   676  0008EE  6F9F               	movwf	main@index& (0+255),b
   677  0008F0                     l2394:
   678                           
   679                           ; BSR set to: 0
   680  0008F0  BFA0               	btfsc	(main@index+1)& (0+255),7,b
   681  0008F2  D006               	goto	l147
   682  0008F4  51A0               	movf	(main@index+1)& (0+255),w,b
   683  0008F6  E126               	bnz	l2404
   684  0008F8  0E0A               	movlw	10
   685  0008FA  5D9F               	subwf	main@index& (0+255),w,b
   686  0008FC  B0D8               	btfsc	status,0,c
   687  0008FE  D022               	goto	u1420
   688  000900                     l147:
   689                           
   690                           ; BSR set to: 0
   691                           ;main.c: 234: ADCON0bits.GO_DONE = 1;
   692  000900  82C2               	bsf	4034,1,c	;volatile
   693  000902                     
   694                           ; BSR set to: 0
   695  000902  B2C2               	btfsc	4034,1,c	;volatile
   696  000904  D7FE               	goto	l150
   697                           
   698                           ;main.c: 238: leituraAD = 256 * ADRESH + ADRESL;
   699  000906  50C3               	movf	4035,w,c	;volatile
   700  000908  CFC4 F097          	movff	4036,??_main	;volatile
   701  00090C  0100               	movlb	0	; () banked
   702  00090E  6B98               	clrf	(??_main+1)& (0+255),b
   703  000910  C097  F098         	movff	??_main,??_main+1
   704  000914  6B97               	clrf	??_main& (0+255),b
   705  000916  2797               	addwf	??_main& (0+255),f,b
   706  000918  0E00               	movlw	0
   707  00091A  2398               	addwfc	(??_main+1)& (0+255),f,b
   708  00091C  C097  F0A5         	movff	??_main,_leituraAD
   709  000920  C098  F0A6         	movff	??_main+1,_leituraAD+1
   710  000924  0E00               	movlw	0
   711  000926  BFA6               	btfsc	(_leituraAD+1)& (0+255),7,b
   712  000928  0EFF               	movlw	-1
   713  00092A  6FA7               	movwf	(_leituraAD+2)& (0+255),b
   714  00092C  6FA8               	movwf	(_leituraAD+3)& (0+255),b
   715                           
   716                           ;main.c: 239: valorAD += leituraAD;
   717  00092E  51A5               	movf	_leituraAD& (0+255),w,b
   718  000930  27AA               	addwf	_valorAD& (0+255),f,b
   719  000932  51A6               	movf	(_leituraAD+1)& (0+255),w,b
   720  000934  23AB               	addwfc	(_valorAD+1)& (0+255),f,b
   721  000936  51A7               	movf	(_leituraAD+2)& (0+255),w,b
   722  000938  23AC               	addwfc	(_valorAD+2)& (0+255),f,b
   723  00093A  51A8               	movf	(_leituraAD+3)& (0+255),w,b
   724  00093C  23AD               	addwfc	(_valorAD+3)& (0+255),f,b
   725                           
   726                           ; BSR set to: 0
   727  00093E  4B9F               	infsnz	main@index& (0+255),f,b
   728  000940  2BA0               	incf	(main@index+1)& (0+255),f,b
   729  000942  D7D6               	goto	l2394
   730  000944                     u1420:
   731  000944                     l2404:
   732                           
   733                           ; BSR set to: 0
   734                           ;main.c: 240: }
   735                           ;main.c: 242: valorAD /= 10;
   736  000944  C0AA  F086         	movff	_valorAD,___lldiv@dividend
   737  000948  C0AB  F087         	movff	_valorAD+1,___lldiv@dividend+1
   738  00094C  C0AC  F088         	movff	_valorAD+2,___lldiv@dividend+2
   739  000950  C0AD  F089         	movff	_valorAD+3,___lldiv@dividend+3
   740  000954  0E0A               	movlw	10
   741  000956  6F8A               	movwf	___lldiv@divisor& (0+255),b
   742  000958  0E00               	movlw	0
   743  00095A  6F8B               	movwf	(___lldiv@divisor+1)& (0+255),b
   744  00095C  0E00               	movlw	0
   745  00095E  6F8C               	movwf	(___lldiv@divisor+2)& (0+255),b
   746  000960  0E00               	movlw	0
   747  000962  6F8D               	movwf	(___lldiv@divisor+3)& (0+255),b
   748  000964  EC2B  F007         	call	___lldiv	;wreg free
   749  000968  C086  F0AA         	movff	?___lldiv,_valorAD
   750  00096C  C087  F0AB         	movff	?___lldiv+1,_valorAD+1
   751  000970  C088  F0AC         	movff	?___lldiv+2,_valorAD+2
   752  000974  C089  F0AD         	movff	?___lldiv+3,_valorAD+3
   753                           
   754                           ;main.c: 243: resultadoAD = (5 * 1000 * valorAD) / 1023;
   755  000978  C0AA  F07A         	movff	_valorAD,___lmul@multiplier
   756  00097C  C0AB  F07B         	movff	_valorAD+1,___lmul@multiplier+1
   757  000980  C0AC  F07C         	movff	_valorAD+2,___lmul@multiplier+2
   758  000984  C0AD  F07D         	movff	_valorAD+3,___lmul@multiplier+3
   759  000988  0E88               	movlw	136
   760  00098A  0100               	movlb	0	; () banked
   761  00098C  6F7E               	movwf	___lmul@multiplicand& (0+255),b
   762  00098E  0E13               	movlw	19
   763  000990  6F7F               	movwf	(___lmul@multiplicand+1)& (0+255),b
   764  000992  0E00               	movlw	0
   765  000994  6F80               	movwf	(___lmul@multiplicand+2)& (0+255),b
   766  000996  0E00               	movlw	0
   767  000998  6F81               	movwf	(___lmul@multiplicand+3)& (0+255),b
   768  00099A  ECD6  F008         	call	___lmul	;wreg free
   769  00099E  C07A  F086         	movff	?___lmul,___lldiv@dividend
   770  0009A2  C07B  F087         	movff	?___lmul+1,___lldiv@dividend+1
   771  0009A6  C07C  F088         	movff	?___lmul+2,___lldiv@dividend+2
   772  0009AA  C07D  F089         	movff	?___lmul+3,___lldiv@dividend+3
   773  0009AE  0EFF               	movlw	255
   774  0009B0  0100               	movlb	0	; () banked
   775  0009B2  6F8A               	movwf	___lldiv@divisor& (0+255),b
   776  0009B4  0E03               	movlw	3
   777  0009B6  6F8B               	movwf	(___lldiv@divisor+1)& (0+255),b
   778  0009B8  0E00               	movlw	0
   779  0009BA  6F8C               	movwf	(___lldiv@divisor+2)& (0+255),b
   780  0009BC  0E00               	movlw	0
   781  0009BE  6F8D               	movwf	(___lldiv@divisor+3)& (0+255),b
   782  0009C0  EC2B  F007         	call	___lldiv	;wreg free
   783  0009C4  C086  F0A1         	movff	?___lldiv,_resultadoAD
   784  0009C8  C087  F0A2         	movff	?___lldiv+1,_resultadoAD+1
   785  0009CC  C088  F0A3         	movff	?___lldiv+2,_resultadoAD+2
   786  0009D0  C089  F0A4         	movff	?___lldiv+3,_resultadoAD+3
   787                           
   788                           ;main.c: 246: if (((resultadoAD/10) + 1) <= tempDesejada) {
   789  0009D4  C0A1  F086         	movff	_resultadoAD,___lldiv@dividend
   790  0009D8  C0A2  F087         	movff	_resultadoAD+1,___lldiv@dividend+1
   791  0009DC  C0A3  F088         	movff	_resultadoAD+2,___lldiv@dividend+2
   792  0009E0  C0A4  F089         	movff	_resultadoAD+3,___lldiv@dividend+3
   793  0009E4  0E0A               	movlw	10
   794  0009E6  0100               	movlb	0	; () banked
   795  0009E8  6F8A               	movwf	___lldiv@divisor& (0+255),b
   796  0009EA  0E00               	movlw	0
   797  0009EC  6F8B               	movwf	(___lldiv@divisor+1)& (0+255),b
   798  0009EE  0E00               	movlw	0
   799  0009F0  6F8C               	movwf	(___lldiv@divisor+2)& (0+255),b
   800  0009F2  0E00               	movlw	0
   801  0009F4  6F8D               	movwf	(___lldiv@divisor+3)& (0+255),b
   802  0009F6  EC2B  F007         	call	___lldiv	;wreg free
   803  0009FA  0E01               	movlw	1
   804  0009FC  0100               	movlb	0	; () banked
   805  0009FE  2586               	addwf	?___lldiv& (0+255),w,b
   806  000A00  6F97               	movwf	??_main& (0+255),b
   807  000A02  0E00               	movlw	0
   808  000A04  2187               	addwfc	(?___lldiv+1)& (0+255),w,b
   809  000A06  6F98               	movwf	(??_main+1)& (0+255),b
   810  000A08  0E00               	movlw	0
   811  000A0A  2188               	addwfc	(?___lldiv+2)& (0+255),w,b
   812  000A0C  6F99               	movwf	(??_main+2)& (0+255),b
   813  000A0E  0E00               	movlw	0
   814  000A10  2189               	addwfc	(?___lldiv+3)& (0+255),w,b
   815  000A12  6F9A               	movwf	(??_main+3)& (0+255),b
   816  000A14  C042  F09B         	movff	_tempDesejada,??_main+4
   817  000A18  6B9C               	clrf	(??_main+5)& (0+255),b
   818  000A1A  6B9D               	clrf	(??_main+6)& (0+255),b
   819  000A1C  6B9E               	clrf	(??_main+7)& (0+255),b
   820  000A1E  5197               	movf	??_main& (0+255),w,b
   821  000A20  5D9B               	subwf	(??_main+4)& (0+255),w,b
   822  000A22  5198               	movf	(??_main+1)& (0+255),w,b
   823  000A24  599C               	subwfb	(??_main+5)& (0+255),w,b
   824  000A26  5199               	movf	(??_main+2)& (0+255),w,b
   825  000A28  599D               	subwfb	(??_main+6)& (0+255),w,b
   826  000A2A  519A               	movf	(??_main+3)& (0+255),w,b
   827  000A2C  599E               	subwfb	(??_main+7)& (0+255),w,b
   828  000A2E  A0D8               	btfss	status,0,c
   829  000A30  D002               	goto	l152
   830                           
   831                           ; BSR set to: 0
   832                           ;main.c: 247: PORTCbits.RC1 = 1;
   833  000A32  8282               	bsf	3970,1,c	;volatile
   834                           
   835                           ;main.c: 248: PORTCbits.RC2 = 0;
   836  000A34  9482               	bcf	3970,2,c	;volatile
   837  000A36                     l152:
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 249: }
   841                           ;main.c: 250: if (((resultadoAD/10) + 1) > tempDesejada) {
   842                           
   843                           ; BSR set to: 0
   844  000A36  C0A1  F086         	movff	_resultadoAD,___lldiv@dividend
   845  000A3A  C0A2  F087         	movff	_resultadoAD+1,___lldiv@dividend+1
   846  000A3E  C0A3  F088         	movff	_resultadoAD+2,___lldiv@dividend+2
   847  000A42  C0A4  F089         	movff	_resultadoAD+3,___lldiv@dividend+3
   848  000A46  0E0A               	movlw	10
   849  000A48  6F8A               	movwf	___lldiv@divisor& (0+255),b
   850  000A4A  0E00               	movlw	0
   851  000A4C  6F8B               	movwf	(___lldiv@divisor+1)& (0+255),b
   852  000A4E  0E00               	movlw	0
   853  000A50  6F8C               	movwf	(___lldiv@divisor+2)& (0+255),b
   854  000A52  0E00               	movlw	0
   855  000A54  6F8D               	movwf	(___lldiv@divisor+3)& (0+255),b
   856  000A56  EC2B  F007         	call	___lldiv	;wreg free
   857  000A5A  0E01               	movlw	1
   858  000A5C  0100               	movlb	0	; () banked
   859  000A5E  2586               	addwf	?___lldiv& (0+255),w,b
   860  000A60  6F97               	movwf	??_main& (0+255),b
   861  000A62  0E00               	movlw	0
   862  000A64  2187               	addwfc	(?___lldiv+1)& (0+255),w,b
   863  000A66  6F98               	movwf	(??_main+1)& (0+255),b
   864  000A68  0E00               	movlw	0
   865  000A6A  2188               	addwfc	(?___lldiv+2)& (0+255),w,b
   866  000A6C  6F99               	movwf	(??_main+2)& (0+255),b
   867  000A6E  0E00               	movlw	0
   868  000A70  2189               	addwfc	(?___lldiv+3)& (0+255),w,b
   869  000A72  6F9A               	movwf	(??_main+3)& (0+255),b
   870  000A74  C042  F09B         	movff	_tempDesejada,??_main+4
   871  000A78  6B9C               	clrf	(??_main+5)& (0+255),b
   872  000A7A  6B9D               	clrf	(??_main+6)& (0+255),b
   873  000A7C  6B9E               	clrf	(??_main+7)& (0+255),b
   874  000A7E  5197               	movf	??_main& (0+255),w,b
   875  000A80  5D9B               	subwf	(??_main+4)& (0+255),w,b
   876  000A82  5198               	movf	(??_main+1)& (0+255),w,b
   877  000A84  599C               	subwfb	(??_main+5)& (0+255),w,b
   878  000A86  5199               	movf	(??_main+2)& (0+255),w,b
   879  000A88  599D               	subwfb	(??_main+6)& (0+255),w,b
   880  000A8A  519A               	movf	(??_main+3)& (0+255),w,b
   881  000A8C  599E               	subwfb	(??_main+7)& (0+255),w,b
   882  000A8E  B0D8               	btfsc	status,0,c
   883  000A90  D71A               	goto	l146
   884                           
   885                           ; BSR set to: 0
   886                           ;main.c: 251: PORTCbits.RC1 = 0;
   887  000A92  9282               	bcf	3970,1,c	;volatile
   888                           
   889                           ;main.c: 252: PORTCbits.RC2 = 1;
   890  000A94  8482               	bsf	3970,2,c	;volatile
   891                           
   892                           ; BSR set to: 0
   893                           
   894                           ; BSR set to: 0
   895  000A96  D717               	goto	l146
   896  000A98                     __end_of_main:
   897                           	opt stack 0
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           intcon	equ	0xFF2
   901                           intcon2	equ	0xFF1
   902                           intcon3	equ	0xFF0
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           status	equ	0xFD8
   906                           
   907 ;; *************** function _setTemperaturaAmbiente *****************
   908 ;; Defined at:
   909 ;;		line 35 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  index           2   53[BANK0 ] int 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       2       0       0       0       0       0       0       0
   925 ;;      Temps:          0       2       0       0       0       0       0       0       0
   926 ;;      Totals:         0       4       0       0       0       0       0       0       0
   927 ;;Total ram usage:        4 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    7
   930 ;; This function calls:
   931 ;;		___lldiv
   932 ;;		___lmul
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text1
   939  000C3A                     __ptext1:
   940                           	opt stack 0
   941  000C3A                     _setTemperaturaAmbiente:
   942                           	opt stack 23
   943                           
   944                           ;main.c: 36: valorAD = 0;
   945                           
   946                           ; BSR set to: 0
   947                           ;incstack = 0
   948  000C3A  0E00               	movlw	0
   949  000C3C  0100               	movlb	0	; () banked
   950  000C3E  6FAA               	movwf	_valorAD& (0+255),b
   951  000C40  0E00               	movlw	0
   952  000C42  6FAB               	movwf	(_valorAD+1)& (0+255),b
   953  000C44  0E00               	movlw	0
   954  000C46  6FAC               	movwf	(_valorAD+2)& (0+255),b
   955  000C48  0E00               	movlw	0
   956  000C4A  6FAD               	movwf	(_valorAD+3)& (0+255),b
   957                           
   958                           ;main.c: 37: leituraAD = 0;
   959  000C4C  0E00               	movlw	0
   960  000C4E  6FA5               	movwf	_leituraAD& (0+255),b
   961  000C50  0E00               	movlw	0
   962  000C52  6FA6               	movwf	(_leituraAD+1)& (0+255),b
   963  000C54  0E00               	movlw	0
   964  000C56  6FA7               	movwf	(_leituraAD+2)& (0+255),b
   965  000C58  0E00               	movlw	0
   966  000C5A  6FA8               	movwf	(_leituraAD+3)& (0+255),b
   967                           
   968                           ;main.c: 40: for(int index = 0; index < 10; index++) {
   969  000C5C  0E00               	movlw	0
   970  000C5E  6F96               	movwf	(setTemperaturaAmbiente@index+1)& (0+255),b
   971  000C60  0E00               	movlw	0
   972  000C62  6F95               	movwf	setTemperaturaAmbiente@index& (0+255),b
   973  000C64                     l1834:
   974                           
   975                           ; BSR set to: 0
   976  000C64  BF96               	btfsc	(setTemperaturaAmbiente@index+1)& (0+255),7,b
   977  000C66  D006               	goto	l83
   978  000C68  5196               	movf	(setTemperaturaAmbiente@index+1)& (0+255),w,b
   979  000C6A  E126               	bnz	l1844
   980  000C6C  0E0A               	movlw	10
   981  000C6E  5D95               	subwf	setTemperaturaAmbiente@index& (0+255),w,b
   982  000C70  B0D8               	btfsc	status,0,c
   983  000C72  D022               	goto	u820
   984  000C74                     l83:
   985                           
   986                           ; BSR set to: 0
   987                           ;main.c: 41: ADCON0bits.GO_DONE = 1;
   988  000C74  82C2               	bsf	4034,1,c	;volatile
   989  000C76                     
   990                           ; BSR set to: 0
   991  000C76  B2C2               	btfsc	4034,1,c	;volatile
   992  000C78  D7FE               	goto	l86
   993                           
   994                           ;main.c: 45: leituraAD = 256 * ADRESH + ADRESL;
   995  000C7A  50C3               	movf	4035,w,c	;volatile
   996  000C7C  CFC4 F093          	movff	4036,??_setTemperaturaAmbiente	;volatile
   997  000C80  0100               	movlb	0	; () banked
   998  000C82  6B94               	clrf	(??_setTemperaturaAmbiente+1)& (0+255),b
   999  000C84  C093  F094         	movff	??_setTemperaturaAmbiente,??_setTemperaturaAmbiente+1
  1000  000C88  6B93               	clrf	??_setTemperaturaAmbiente& (0+255),b
  1001  000C8A  2793               	addwf	??_setTemperaturaAmbiente& (0+255),f,b
  1002  000C8C  0E00               	movlw	0
  1003  000C8E  2394               	addwfc	(??_setTemperaturaAmbiente+1)& (0+255),f,b
  1004  000C90  C093  F0A5         	movff	??_setTemperaturaAmbiente,_leituraAD
  1005  000C94  C094  F0A6         	movff	??_setTemperaturaAmbiente+1,_leituraAD+1
  1006  000C98  0E00               	movlw	0
  1007  000C9A  BFA6               	btfsc	(_leituraAD+1)& (0+255),7,b
  1008  000C9C  0EFF               	movlw	-1
  1009  000C9E  6FA7               	movwf	(_leituraAD+2)& (0+255),b
  1010  000CA0  6FA8               	movwf	(_leituraAD+3)& (0+255),b
  1011                           
  1012                           ;main.c: 46: valorAD += leituraAD;
  1013  000CA2  51A5               	movf	_leituraAD& (0+255),w,b
  1014  000CA4  27AA               	addwf	_valorAD& (0+255),f,b
  1015  000CA6  51A6               	movf	(_leituraAD+1)& (0+255),w,b
  1016  000CA8  23AB               	addwfc	(_valorAD+1)& (0+255),f,b
  1017  000CAA  51A7               	movf	(_leituraAD+2)& (0+255),w,b
  1018  000CAC  23AC               	addwfc	(_valorAD+2)& (0+255),f,b
  1019  000CAE  51A8               	movf	(_leituraAD+3)& (0+255),w,b
  1020  000CB0  23AD               	addwfc	(_valorAD+3)& (0+255),f,b
  1021                           
  1022                           ; BSR set to: 0
  1023  000CB2  4B95               	infsnz	setTemperaturaAmbiente@index& (0+255),f,b
  1024  000CB4  2B96               	incf	(setTemperaturaAmbiente@index+1)& (0+255),f,b
  1025  000CB6  D7D6               	goto	l1834
  1026  000CB8                     u820:
  1027  000CB8                     l1844:
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;main.c: 47: }
  1031                           ;main.c: 49: valorAD /= 10;
  1032  000CB8  C0AA  F086         	movff	_valorAD,___lldiv@dividend
  1033  000CBC  C0AB  F087         	movff	_valorAD+1,___lldiv@dividend+1
  1034  000CC0  C0AC  F088         	movff	_valorAD+2,___lldiv@dividend+2
  1035  000CC4  C0AD  F089         	movff	_valorAD+3,___lldiv@dividend+3
  1036  000CC8  0E0A               	movlw	10
  1037  000CCA  6F8A               	movwf	___lldiv@divisor& (0+255),b
  1038  000CCC  0E00               	movlw	0
  1039  000CCE  6F8B               	movwf	(___lldiv@divisor+1)& (0+255),b
  1040  000CD0  0E00               	movlw	0
  1041  000CD2  6F8C               	movwf	(___lldiv@divisor+2)& (0+255),b
  1042  000CD4  0E00               	movlw	0
  1043  000CD6  6F8D               	movwf	(___lldiv@divisor+3)& (0+255),b
  1044  000CD8  EC2B  F007         	call	___lldiv	;wreg free
  1045  000CDC  C086  F0AA         	movff	?___lldiv,_valorAD
  1046  000CE0  C087  F0AB         	movff	?___lldiv+1,_valorAD+1
  1047  000CE4  C088  F0AC         	movff	?___lldiv+2,_valorAD+2
  1048  000CE8  C089  F0AD         	movff	?___lldiv+3,_valorAD+3
  1049                           
  1050                           ;main.c: 50: resultadoAD = (5 * 1000 * valorAD) / 1023;
  1051  000CEC  C0AA  F07A         	movff	_valorAD,___lmul@multiplier
  1052  000CF0  C0AB  F07B         	movff	_valorAD+1,___lmul@multiplier+1
  1053  000CF4  C0AC  F07C         	movff	_valorAD+2,___lmul@multiplier+2
  1054  000CF8  C0AD  F07D         	movff	_valorAD+3,___lmul@multiplier+3
  1055  000CFC  0E88               	movlw	136
  1056  000CFE  0100               	movlb	0	; () banked
  1057  000D00  6F7E               	movwf	___lmul@multiplicand& (0+255),b
  1058  000D02  0E13               	movlw	19
  1059  000D04  6F7F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1060  000D06  0E00               	movlw	0
  1061  000D08  6F80               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1062  000D0A  0E00               	movlw	0
  1063  000D0C  6F81               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1064  000D0E  ECD6  F008         	call	___lmul	;wreg free
  1065  000D12  C07A  F086         	movff	?___lmul,___lldiv@dividend
  1066  000D16  C07B  F087         	movff	?___lmul+1,___lldiv@dividend+1
  1067  000D1A  C07C  F088         	movff	?___lmul+2,___lldiv@dividend+2
  1068  000D1E  C07D  F089         	movff	?___lmul+3,___lldiv@dividend+3
  1069  000D22  0EFF               	movlw	255
  1070  000D24  0100               	movlb	0	; () banked
  1071  000D26  6F8A               	movwf	___lldiv@divisor& (0+255),b
  1072  000D28  0E03               	movlw	3
  1073  000D2A  6F8B               	movwf	(___lldiv@divisor+1)& (0+255),b
  1074  000D2C  0E00               	movlw	0
  1075  000D2E  6F8C               	movwf	(___lldiv@divisor+2)& (0+255),b
  1076  000D30  0E00               	movlw	0
  1077  000D32  6F8D               	movwf	(___lldiv@divisor+3)& (0+255),b
  1078  000D34  EC2B  F007         	call	___lldiv	;wreg free
  1079  000D38  C086  F0A1         	movff	?___lldiv,_resultadoAD
  1080  000D3C  C087  F0A2         	movff	?___lldiv+1,_resultadoAD+1
  1081  000D40  C088  F0A3         	movff	?___lldiv+2,_resultadoAD+2
  1082  000D44  C089  F0A4         	movff	?___lldiv+3,_resultadoAD+3
  1083                           
  1084                           ;main.c: 51: tempMin = resultadoAD/10;
  1085  000D48  C0A1  F086         	movff	_resultadoAD,___lldiv@dividend
  1086  000D4C  C0A2  F087         	movff	_resultadoAD+1,___lldiv@dividend+1
  1087  000D50  C0A3  F088         	movff	_resultadoAD+2,___lldiv@dividend+2
  1088  000D54  C0A4  F089         	movff	_resultadoAD+3,___lldiv@dividend+3
  1089  000D58  0E0A               	movlw	10
  1090  000D5A  0100               	movlb	0	; () banked
  1091  000D5C  6F8A               	movwf	___lldiv@divisor& (0+255),b
  1092  000D5E  0E00               	movlw	0
  1093  000D60  6F8B               	movwf	(___lldiv@divisor+1)& (0+255),b
  1094  000D62  0E00               	movlw	0
  1095  000D64  6F8C               	movwf	(___lldiv@divisor+2)& (0+255),b
  1096  000D66  0E00               	movlw	0
  1097  000D68  6F8D               	movwf	(___lldiv@divisor+3)& (0+255),b
  1098  000D6A  EC2B  F007         	call	___lldiv	;wreg free
  1099  000D6E  0100               	movlb	0	; () banked
  1100  000D70  5186               	movf	?___lldiv& (0+255),w,b
  1101  000D72  6FA9               	movwf	_tempMin& (0+255),b
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;main.c: 52: tempDesejada = tempMin;
  1105  000D74  C0A9  F042         	movff	_tempMin,_tempDesejada
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 54: valorAD = 0;
  1109  000D78  0E00               	movlw	0
  1110  000D7A  6FAA               	movwf	_valorAD& (0+255),b
  1111  000D7C  0E00               	movlw	0
  1112  000D7E  6FAB               	movwf	(_valorAD+1)& (0+255),b
  1113  000D80  0E00               	movlw	0
  1114  000D82  6FAC               	movwf	(_valorAD+2)& (0+255),b
  1115  000D84  0E00               	movlw	0
  1116  000D86  6FAD               	movwf	(_valorAD+3)& (0+255),b
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 55: leituraAD = 0;
  1120  000D88  0E00               	movlw	0
  1121  000D8A  6FA5               	movwf	_leituraAD& (0+255),b
  1122  000D8C  0E00               	movlw	0
  1123  000D8E  6FA6               	movwf	(_leituraAD+1)& (0+255),b
  1124  000D90  0E00               	movlw	0
  1125  000D92  6FA7               	movwf	(_leituraAD+2)& (0+255),b
  1126  000D94  0E00               	movlw	0
  1127  000D96  6FA8               	movwf	(_leituraAD+3)& (0+255),b
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;main.c: 56: resultadoAD = 0;
  1131  000D98  0E00               	movlw	0
  1132  000D9A  6FA1               	movwf	_resultadoAD& (0+255),b
  1133  000D9C  0E00               	movlw	0
  1134  000D9E  6FA2               	movwf	(_resultadoAD+1)& (0+255),b
  1135  000DA0  0E00               	movlw	0
  1136  000DA2  6FA3               	movwf	(_resultadoAD+2)& (0+255),b
  1137  000DA4  0E00               	movlw	0
  1138  000DA6  6FA4               	movwf	(_resultadoAD+3)& (0+255),b
  1139                           
  1140                           ; BSR set to: 0
  1141  000DA8  0012               	return		;funcret
  1142  000DAA                     __end_of_setTemperaturaAmbiente:
  1143                           	opt stack 0
  1144                           tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           intcon	equ	0xFF2
  1147                           intcon2	equ	0xFF1
  1148                           intcon3	equ	0xFF0
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           status	equ	0xFD8
  1152                           
  1153 ;; *************** function ___lmul *****************
  1154 ;; Defined at:
  1155 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  multiplier      4   26[BANK0 ] unsigned long 
  1158 ;;  multiplicand    4   30[BANK0 ] unsigned long 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  product         4   34[BANK0 ] unsigned long 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  4   26[BANK0 ] unsigned long 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1170 ;;      Params:         0       8       0       0       0       0       0       0       0
  1171 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1173 ;;      Totals:         0      12       0       0       0       0       0       0       0
  1174 ;;Total ram usage:       12 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    6
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_setTemperaturaAmbiente
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text2
  1186  0011AC                     __ptext2:
  1187                           	opt stack 0
  1188  0011AC                     ___lmul:
  1189                           	opt stack 23
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;incstack = 0
  1193  0011AC  0E00               	movlw	0
  1194  0011AE  0100               	movlb	0	; () banked
  1195  0011B0  6F82               	movwf	___lmul@product& (0+255),b
  1196  0011B2  0E00               	movlw	0
  1197  0011B4  6F83               	movwf	(___lmul@product+1)& (0+255),b
  1198  0011B6  0E00               	movlw	0
  1199  0011B8  6F84               	movwf	(___lmul@product+2)& (0+255),b
  1200  0011BA  0E00               	movlw	0
  1201  0011BC  6F85               	movwf	(___lmul@product+3)& (0+255),b
  1202  0011BE                     
  1203                           ; BSR set to: 0
  1204                           
  1205                           ; BSR set to: 0
  1206  0011BE  A17A               	btfss	___lmul@multiplier& (0+255),0,b
  1207  0011C0  D008               	goto	l259
  1208                           
  1209                           ; BSR set to: 0
  1210  0011C2  517E               	movf	___lmul@multiplicand& (0+255),w,b
  1211  0011C4  2782               	addwf	___lmul@product& (0+255),f,b
  1212  0011C6  517F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1213  0011C8  2383               	addwfc	(___lmul@product+1)& (0+255),f,b
  1214  0011CA  5180               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1215  0011CC  2384               	addwfc	(___lmul@product+2)& (0+255),f,b
  1216  0011CE  5181               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1217  0011D0  2385               	addwfc	(___lmul@product+3)& (0+255),f,b
  1218  0011D2                     l259:
  1219                           
  1220                           ; BSR set to: 0
  1221                           
  1222                           ; BSR set to: 0
  1223  0011D2  90D8               	bcf	status,0,c
  1224  0011D4  377E               	rlcf	___lmul@multiplicand& (0+255),f,b
  1225  0011D6  377F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1226  0011D8  3780               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1227  0011DA  3781               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1228                           
  1229                           ; BSR set to: 0
  1230  0011DC  90D8               	bcf	status,0,c
  1231  0011DE  337D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1232  0011E0  337C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1233  0011E2  337B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1234  0011E4  337A               	rrcf	___lmul@multiplier& (0+255),f,b
  1235  0011E6  517A               	movf	___lmul@multiplier& (0+255),w,b
  1236  0011E8  117B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1237  0011EA  117C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1238  0011EC  117D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1239  0011EE  A4D8               	btfss	status,2,c
  1240  0011F0  D7E6               	goto	l258
  1241                           
  1242                           ; BSR set to: 0
  1243  0011F2  C082  F07A         	movff	___lmul@product,?___lmul
  1244  0011F6  C083  F07B         	movff	___lmul@product+1,?___lmul+1
  1245  0011FA  C084  F07C         	movff	___lmul@product+2,?___lmul+2
  1246  0011FE  C085  F07D         	movff	___lmul@product+3,?___lmul+3
  1247                           
  1248                           ; BSR set to: 0
  1249  001202  0012               	return		;funcret
  1250  001204                     __end_of___lmul:
  1251                           	opt stack 0
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           intcon	equ	0xFF2
  1255                           intcon2	equ	0xFF1
  1256                           intcon3	equ	0xFF0
  1257                           postinc0	equ	0xFEE
  1258                           wreg	equ	0xFE8
  1259                           status	equ	0xFD8
  1260                           
  1261 ;; *************** function ___lldiv *****************
  1262 ;; Defined at:
  1263 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  dividend        4   38[BANK0 ] unsigned long 
  1266 ;;  divisor         4   42[BANK0 ] unsigned long 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  quotient        4   46[BANK0 ] unsigned long 
  1269 ;;  counter         1   50[BANK0 ] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  4   38[BANK0 ] unsigned long 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1279 ;;      Params:         0       8       0       0       0       0       0       0       0
  1280 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1282 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1283 ;;Total ram usage:       13 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    6
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_setTemperaturaAmbiente
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text3
  1295  000E56                     __ptext3:
  1296                           	opt stack 0
  1297  000E56                     ___lldiv:
  1298                           	opt stack 23
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;incstack = 0
  1302  000E56  0E00               	movlw	0
  1303  000E58  0100               	movlb	0	; () banked
  1304  000E5A  6F8E               	movwf	___lldiv@quotient& (0+255),b
  1305  000E5C  0E00               	movlw	0
  1306  000E5E  6F8F               	movwf	(___lldiv@quotient+1)& (0+255),b
  1307  000E60  0E00               	movlw	0
  1308  000E62  6F90               	movwf	(___lldiv@quotient+2)& (0+255),b
  1309  000E64  0E00               	movlw	0
  1310  000E66  6F91               	movwf	(___lldiv@quotient+3)& (0+255),b
  1311                           
  1312                           ; BSR set to: 0
  1313  000E68  518A               	movf	___lldiv@divisor& (0+255),w,b
  1314  000E6A  118B               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  1315  000E6C  118C               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  1316  000E6E  118D               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  1317  000E70  B4D8               	btfsc	status,2,c
  1318  000E72  D02A               	goto	l602
  1319                           
  1320                           ; BSR set to: 0
  1321  000E74  0E01               	movlw	1
  1322  000E76  6F92               	movwf	___lldiv@counter& (0+255),b
  1323  000E78  D006               	goto	l597
  1324  000E7A                     
  1325                           ; BSR set to: 0
  1326                           
  1327                           ; BSR set to: 0
  1328  000E7A  90D8               	bcf	status,0,c
  1329  000E7C  378A               	rlcf	___lldiv@divisor& (0+255),f,b
  1330  000E7E  378B               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  1331  000E80  378C               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  1332  000E82  378D               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  1333  000E84  2B92               	incf	___lldiv@counter& (0+255),f,b
  1334  000E86                     l597:
  1335                           
  1336                           ; BSR set to: 0
  1337                           
  1338                           ; BSR set to: 0
  1339  000E86  AF8D               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  1340  000E88  D7F8               	goto	l598
  1341  000E8A                     u780:
  1342                           
  1343                           ; BSR set to: 0
  1344                           
  1345                           ; BSR set to: 0
  1346                           
  1347                           ; BSR set to: 0
  1348  000E8A  90D8               	bcf	status,0,c
  1349  000E8C  378E               	rlcf	___lldiv@quotient& (0+255),f,b
  1350  000E8E  378F               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1351  000E90  3790               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1352  000E92  3791               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1353                           
  1354                           ; BSR set to: 0
  1355  000E94  518A               	movf	___lldiv@divisor& (0+255),w,b
  1356  000E96  5D86               	subwf	___lldiv@dividend& (0+255),w,b
  1357  000E98  518B               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1358  000E9A  5987               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  1359  000E9C  518C               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1360  000E9E  5988               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  1361  000EA0  518D               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1362  000EA2  5989               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  1363  000EA4  A0D8               	btfss	status,0,c
  1364  000EA6  D009               	goto	l601
  1365                           
  1366                           ; BSR set to: 0
  1367  000EA8  518A               	movf	___lldiv@divisor& (0+255),w,b
  1368  000EAA  5F86               	subwf	___lldiv@dividend& (0+255),f,b
  1369  000EAC  518B               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1370  000EAE  5B87               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  1371  000EB0  518C               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1372  000EB2  5B88               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  1373  000EB4  518D               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1374  000EB6  5B89               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  1375                           
  1376                           ; BSR set to: 0
  1377  000EB8  818E               	bsf	___lldiv@quotient& (0+255),0,b
  1378  000EBA                     l601:
  1379                           
  1380                           ; BSR set to: 0
  1381                           
  1382                           ; BSR set to: 0
  1383  000EBA  90D8               	bcf	status,0,c
  1384  000EBC  338D               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  1385  000EBE  338C               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  1386  000EC0  338B               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  1387  000EC2  338A               	rrcf	___lldiv@divisor& (0+255),f,b
  1388                           
  1389                           ; BSR set to: 0
  1390  000EC4  2F92               	decfsz	___lldiv@counter& (0+255),f,b
  1391  000EC6  D7E1               	goto	u780
  1392  000EC8                     l602:
  1393                           
  1394                           ; BSR set to: 0
  1395                           
  1396                           ; BSR set to: 0
  1397  000EC8  C08E  F086         	movff	___lldiv@quotient,?___lldiv
  1398  000ECC  C08F  F087         	movff	___lldiv@quotient+1,?___lldiv+1
  1399  000ED0  C090  F088         	movff	___lldiv@quotient+2,?___lldiv+2
  1400  000ED4  C091  F089         	movff	___lldiv@quotient+3,?___lldiv+3
  1401                           
  1402                           ; BSR set to: 0
  1403  000ED8  0012               	return		;funcret
  1404  000EDA                     __end_of___lldiv:
  1405                           	opt stack 0
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           intcon	equ	0xFF2
  1409                           intcon2	equ	0xFF1
  1410                           intcon3	equ	0xFF0
  1411                           postinc0	equ	0xFEE
  1412                           wreg	equ	0xFE8
  1413                           status	equ	0xFD8
  1414                           
  1415 ;; *************** function _putsXLCD *****************
  1416 ;; Defined at:
  1417 ;;		line 510 in file "nxlcd.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  buffer          2   27[BANK0 ] PTR unsigned char 
  1420 ;;		 -> STR_2(9), STR_1(12), 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1432 ;;      Params:         0       2       0       0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1435 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1436 ;;Total ram usage:        2 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    8
  1439 ;; This function calls:
  1440 ;;		_BusyXLCD
  1441 ;;		_WriteDataXLCD
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text4
  1448  001404                     __ptext4:
  1449                           	opt stack 0
  1450  001404                     _putsXLCD:
  1451                           	opt stack 22
  1452                           
  1453                           ;nxlcd.c: 512: while(*buffer)
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;incstack = 0
  1457  001404  D010               	goto	l231
  1458  001406                     
  1459                           ;nxlcd.c: 513: {
  1460                           ;nxlcd.c: 514: while(BusyXLCD());
  1461  001406  ECE5  F009         	call	_BusyXLCD	;wreg free
  1462  00140A  0900               	iorlw	0
  1463  00140C  A4D8               	btfss	status,2,c
  1464  00140E  D7FB               	goto	l232
  1465                           
  1466                           ;nxlcd.c: 515: WriteDataXLCD(*buffer);
  1467  001410  C07B  FFF6         	movff	putsXLCD@buffer,tblptrl
  1468  001414  C07C  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1469  001418                     	if	0	;tblptru may be non-zero
  1470  001418                     	endif
  1471  001418                     	if	0	;tblptru may be non-zero
  1472  001418                     	endif
  1473  001418  0008               	tblrd		*
  1474  00141A  50F5               	movf	tablat,w,c
  1475  00141C  EC25  F009         	call	_WriteDataXLCD
  1476                           
  1477                           ;nxlcd.c: 516: buffer++;
  1478  001420  0100               	movlb	0	; () banked
  1479  001422  4B7B               	infsnz	putsXLCD@buffer& (0+255),f,b
  1480  001424  2B7C               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  1481  001426                     l231:
  1482                           
  1483                           ; BSR set to: 0
  1484  001426  C07B  FFF6         	movff	putsXLCD@buffer,tblptrl
  1485  00142A  C07C  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1486  00142E                     	if	0	;tblptru may be non-zero
  1487  00142E                     	endif
  1488  00142E                     	if	0	;tblptru may be non-zero
  1489  00142E                     	endif
  1490  00142E  0008               	tblrd		*
  1491  001430  50F5               	movf	tablat,w,c
  1492  001432  0900               	iorlw	0
  1493  001434  B4D8               	btfsc	status,2,c
  1494  001436  0012               	return	
  1495  001438  D7E6               	goto	l232
  1496  00143A                     __end_of_putsXLCD:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           intcon	equ	0xFF2
  1503                           intcon2	equ	0xFF1
  1504                           intcon3	equ	0xFF0
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _WriteDataXLCD *****************
  1510 ;; Defined at:
  1511 ;;		line 449 in file "nxlcd.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  data            1    wreg     unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  data            1   26[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0
  1526 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1528 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1529 ;;Total ram usage:        1 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    7
  1532 ;; This function calls:
  1533 ;;		_DelayFor18TCY
  1534 ;; This function is called by:
  1535 ;;		_putsXLCD
  1536 ;;		_putrsXLCD
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text5
  1541  00124A                     __ptext5:
  1542                           	opt stack 0
  1543  00124A                     _WriteDataXLCD:
  1544                           	opt stack 22
  1545                           
  1546                           ;incstack = 0
  1547                           ;WriteDataXLCD@data stored from wreg
  1548  00124A  0100               	movlb	0	; () banked
  1549  00124C  6F7A               	movwf	WriteDataXLCD@data& (0+255),b
  1550                           
  1551                           ;nxlcd.c: 464: TRISD &= 0x0f;
  1552  00124E  0E0F               	movlw	15
  1553  001250  1695               	andwf	3989,f,c	;volatile
  1554                           
  1555                           ;nxlcd.c: 465: PORTD &= 0x0f;
  1556  001252  0E0F               	movlw	15
  1557  001254  1683               	andwf	3971,f,c	;volatile
  1558                           
  1559                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  1560  001256  0100               	movlb	0	; () banked
  1561  001258  517A               	movf	WriteDataXLCD@data& (0+255),w,b
  1562  00125A  0BF0               	andlw	240
  1563  00125C  1283               	iorwf	3971,f,c	;volatile
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  1567  00125E  808D               	bsf	3981,0,c	;volatile
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  1571  001260  948D               	bcf	3981,2,c	;volatile
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;nxlcd.c: 474: DelayFor18TCY();
  1575  001262  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1576                           
  1577                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  1578  001266  828D               	bsf	3981,1,c	;volatile
  1579                           
  1580                           ;nxlcd.c: 476: DelayFor18TCY();
  1581  001268  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1582                           
  1583                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  1584  00126C  928D               	bcf	3981,1,c	;volatile
  1585                           
  1586                           ;nxlcd.c: 479: PORTD &= 0x0f;
  1587  00126E  0E0F               	movlw	15
  1588  001270  1683               	andwf	3971,f,c	;volatile
  1589                           
  1590                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  1591  001272  0100               	movlb	0	; () banked
  1592  001274  397A               	swapf	WriteDataXLCD@data& (0+255),w,b
  1593  001276  0BF0               	andlw	240
  1594  001278  0BF0               	andlw	240
  1595  00127A  1283               	iorwf	3971,f,c	;volatile
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;nxlcd.c: 485: DelayFor18TCY();
  1599  00127C  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1600                           
  1601                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  1602  001280  828D               	bsf	3981,1,c	;volatile
  1603                           
  1604                           ;nxlcd.c: 487: DelayFor18TCY();
  1605  001282  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1606                           
  1607                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  1608  001286  928D               	bcf	3981,1,c	;volatile
  1609                           
  1610                           ;nxlcd.c: 490: TRISD |= 0xf0;
  1611  001288  0EF0               	movlw	240
  1612  00128A  1295               	iorwf	3989,f,c	;volatile
  1613  00128C  0012               	return	
  1614  00128E                     __end_of_WriteDataXLCD:
  1615                           	opt stack 0
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           intcon	equ	0xFF2
  1621                           intcon2	equ	0xFF1
  1622                           intcon3	equ	0xFF0
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _OpenXLCD *****************
  1628 ;; Defined at:
  1629 ;;		line 41 in file "nxlcd.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  lcdtype         1    wreg     unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  lcdtype         1   27[BANK0 ] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0
  1644 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1646 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1647 ;;Total ram usage:        1 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    8
  1650 ;; This function calls:
  1651 ;;		_BusyXLCD
  1652 ;;		_DelayPORXLCD
  1653 ;;		_DelayXLCD
  1654 ;;		_SetDDRamAddr
  1655 ;;		_WriteCmdXLCD
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text6
  1662  000DAA                     __ptext6:
  1663                           	opt stack 0
  1664  000DAA                     _OpenXLCD:
  1665                           	opt stack 22
  1666                           
  1667                           ;incstack = 0
  1668                           ;OpenXLCD@lcdtype stored from wreg
  1669  000DAA  0100               	movlb	0	; () banked
  1670  000DAC  6F7B               	movwf	OpenXLCD@lcdtype& (0+255),b
  1671                           
  1672                           ;nxlcd.c: 50: PORTD &= 0x0f;
  1673  000DAE  0E0F               	movlw	15
  1674  000DB0  1683               	andwf	3971,f,c	;volatile
  1675                           
  1676                           ;nxlcd.c: 51: TRISD &= 0x0F;
  1677  000DB2  0E0F               	movlw	15
  1678  000DB4  1695               	andwf	3989,f,c	;volatile
  1679                           
  1680                           ;nxlcd.c: 57: TRISEbits.TRISE2 = 0;
  1681  000DB6  9496               	bcf	3990,2,c	;volatile
  1682                           
  1683                           ;nxlcd.c: 58: TRISEbits.TRISE0 = 0;
  1684  000DB8  9096               	bcf	3990,0,c	;volatile
  1685                           
  1686                           ;nxlcd.c: 59: TRISEbits.TRISE1 = 0;
  1687  000DBA  9296               	bcf	3990,1,c	;volatile
  1688                           
  1689                           ;nxlcd.c: 60: LATEbits.LATE2 = 0;
  1690  000DBC  948D               	bcf	3981,2,c	;volatile
  1691                           
  1692                           ;nxlcd.c: 61: LATEbits.LATE0 = 0;
  1693  000DBE  908D               	bcf	3981,0,c	;volatile
  1694                           
  1695                           ;nxlcd.c: 62: LATEbits.LATE1 = 0;
  1696  000DC0  928D               	bcf	3981,1,c	;volatile
  1697                           
  1698                           ;nxlcd.c: 65: DelayPORXLCD();
  1699  000DC2  EC3C  F00A         	call	_DelayPORXLCD	;wreg free
  1700                           
  1701                           ;nxlcd.c: 67: WriteCmdXLCD(0x30);
  1702  000DC6  0E30               	movlw	48
  1703  000DC8  EC47  F009         	call	_WriteCmdXLCD
  1704                           
  1705                           ;nxlcd.c: 68: DelayXLCD();
  1706  000DCC  EC32  F00A         	call	_DelayXLCD	;wreg free
  1707                           
  1708                           ;nxlcd.c: 69: DelayXLCD();
  1709  000DD0  EC32  F00A         	call	_DelayXLCD	;wreg free
  1710                           
  1711                           ;nxlcd.c: 70: WriteCmdXLCD(0x30);
  1712  000DD4  0E30               	movlw	48
  1713  000DD6  EC47  F009         	call	_WriteCmdXLCD
  1714                           
  1715                           ;nxlcd.c: 71: DelayXLCD();
  1716  000DDA  EC32  F00A         	call	_DelayXLCD	;wreg free
  1717                           
  1718                           ;nxlcd.c: 72: DelayXLCD();
  1719  000DDE  EC32  F00A         	call	_DelayXLCD	;wreg free
  1720                           
  1721                           ;nxlcd.c: 73: WriteCmdXLCD(0x32);
  1722  000DE2  0E32               	movlw	50
  1723  000DE4  EC47  F009         	call	_WriteCmdXLCD
  1724  000DE8  ECE5  F009         	call	_BusyXLCD	;wreg free
  1725  000DEC  0900               	iorlw	0
  1726  000DEE  A4D8               	btfss	status,2,c
  1727  000DF0  D7FB               	goto	l185
  1728  000DF2                     u830:
  1729                           
  1730                           ;nxlcd.c: 79: while(BusyXLCD());
  1731  000DF2  ECE5  F009         	call	_BusyXLCD	;wreg free
  1732  000DF6  0900               	iorlw	0
  1733  000DF8  A4D8               	btfss	status,2,c
  1734  000DFA  D7FB               	goto	u830
  1735                           
  1736                           ;nxlcd.c: 80: WriteCmdXLCD(lcdtype);
  1737  000DFC  0100               	movlb	0	; () banked
  1738  000DFE  517B               	movf	OpenXLCD@lcdtype& (0+255),w,b
  1739  000E00  EC47  F009         	call	_WriteCmdXLCD
  1740  000E04  ECE5  F009         	call	_BusyXLCD	;wreg free
  1741  000E08  0900               	iorlw	0
  1742  000E0A  A4D8               	btfss	status,2,c
  1743  000E0C  D7FB               	goto	l191
  1744                           
  1745                           ;nxlcd.c: 84: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1746  000E0E  0E08               	movlw	8
  1747  000E10  EC47  F009         	call	_WriteCmdXLCD
  1748  000E14  ECE5  F009         	call	_BusyXLCD	;wreg free
  1749  000E18  0900               	iorlw	0
  1750  000E1A  A4D8               	btfss	status,2,c
  1751  000E1C  D7FB               	goto	l194
  1752                           
  1753                           ;nxlcd.c: 86: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1754  000E1E  0E0F               	movlw	15
  1755  000E20  EC47  F009         	call	_WriteCmdXLCD
  1756  000E24  ECE5  F009         	call	_BusyXLCD	;wreg free
  1757  000E28  0900               	iorlw	0
  1758  000E2A  A4D8               	btfss	status,2,c
  1759  000E2C  D7FB               	goto	l197
  1760                           
  1761                           ;nxlcd.c: 90: WriteCmdXLCD(0x01);
  1762  000E2E  0E01               	movlw	1
  1763  000E30  EC47  F009         	call	_WriteCmdXLCD
  1764  000E34  ECE5  F009         	call	_BusyXLCD	;wreg free
  1765  000E38  0900               	iorlw	0
  1766  000E3A  A4D8               	btfss	status,2,c
  1767  000E3C  D7FB               	goto	l200
  1768                           
  1769                           ;nxlcd.c: 94: WriteCmdXLCD(0b00000100);
  1770  000E3E  0E04               	movlw	4
  1771  000E40  EC47  F009         	call	_WriteCmdXLCD
  1772  000E44  ECE5  F009         	call	_BusyXLCD	;wreg free
  1773  000E48  0900               	iorlw	0
  1774  000E4A  A4D8               	btfss	status,2,c
  1775  000E4C  D7FB               	goto	l203
  1776                           
  1777                           ;nxlcd.c: 98: SetDDRamAddr(0x80);
  1778  000E4E  0E80               	movlw	128
  1779  000E50  EC02  F009         	call	_SetDDRamAddr
  1780  000E54  0012               	return	
  1781  000E56                     __end_of_OpenXLCD:
  1782                           	opt stack 0
  1783                           tblptru	equ	0xFF8
  1784                           tblptrh	equ	0xFF7
  1785                           tblptrl	equ	0xFF6
  1786                           tablat	equ	0xFF5
  1787                           intcon	equ	0xFF2
  1788                           intcon2	equ	0xFF1
  1789                           intcon3	equ	0xFF0
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           status	equ	0xFD8
  1793                           
  1794 ;; *************** function _WriteCmdXLCD *****************
  1795 ;; Defined at:
  1796 ;;		line 388 in file "nxlcd.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  cmd             1    wreg     unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  cmd             1   26[BANK0 ] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1810 ;;      Params:         0       0       0       0       0       0       0       0       0
  1811 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1813 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1814 ;;Total ram usage:        1 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    7
  1817 ;; This function calls:
  1818 ;;		_DelayFor18TCY
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;;		_OpenXLCD
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text7
  1826  00128E                     __ptext7:
  1827                           	opt stack 0
  1828  00128E                     _WriteCmdXLCD:
  1829                           	opt stack 23
  1830                           
  1831                           ;incstack = 0
  1832                           ;WriteCmdXLCD@cmd stored from wreg
  1833  00128E  0100               	movlb	0	; () banked
  1834  001290  6F7A               	movwf	WriteCmdXLCD@cmd& (0+255),b
  1835                           
  1836                           ;nxlcd.c: 403: TRISD &= 0x0f;
  1837  001292  0E0F               	movlw	15
  1838  001294  1695               	andwf	3989,f,c	;volatile
  1839                           
  1840                           ;nxlcd.c: 404: PORTD &= 0x0f;
  1841  001296  0E0F               	movlw	15
  1842  001298  1683               	andwf	3971,f,c	;volatile
  1843                           
  1844                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  1845  00129A  0100               	movlb	0	; () banked
  1846  00129C  517A               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  1847  00129E  0BF0               	andlw	240
  1848  0012A0  1283               	iorwf	3971,f,c	;volatile
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  1852  0012A2  948D               	bcf	3981,2,c	;volatile
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  1856  0012A4  908D               	bcf	3981,0,c	;volatile
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;nxlcd.c: 413: DelayFor18TCY();
  1860  0012A6  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1861                           
  1862                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  1863  0012AA  828D               	bsf	3981,1,c	;volatile
  1864                           
  1865                           ;nxlcd.c: 415: DelayFor18TCY();
  1866  0012AC  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1867                           
  1868                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  1869  0012B0  928D               	bcf	3981,1,c	;volatile
  1870                           
  1871                           ;nxlcd.c: 418: PORTD &= 0x0f;
  1872  0012B2  0E0F               	movlw	15
  1873  0012B4  1683               	andwf	3971,f,c	;volatile
  1874                           
  1875                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  1876  0012B6  0100               	movlb	0	; () banked
  1877  0012B8  397A               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  1878  0012BA  0BF0               	andlw	240
  1879  0012BC  0BF0               	andlw	240
  1880  0012BE  1283               	iorwf	3971,f,c	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;nxlcd.c: 424: DelayFor18TCY();
  1884  0012C0  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1885                           
  1886                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  1887  0012C4  828D               	bsf	3981,1,c	;volatile
  1888                           
  1889                           ;nxlcd.c: 426: DelayFor18TCY();
  1890  0012C6  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1891                           
  1892                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  1893  0012CA  928D               	bcf	3981,1,c	;volatile
  1894                           
  1895                           ;nxlcd.c: 429: TRISD |= 0xf0;
  1896  0012CC  0EF0               	movlw	240
  1897  0012CE  1295               	iorwf	3989,f,c	;volatile
  1898  0012D0  0012               	return	
  1899  0012D2                     __end_of_WriteCmdXLCD:
  1900                           	opt stack 0
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           intcon	equ	0xFF2
  1906                           intcon2	equ	0xFF1
  1907                           intcon3	equ	0xFF0
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           status	equ	0xFD8
  1911                           
  1912 ;; *************** function _SetDDRamAddr *****************
  1913 ;; Defined at:
  1914 ;;		line 171 in file "nxlcd.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  DDaddr          1    wreg     unsigned char 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  DDaddr          1   26[BANK0 ] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0
  1929 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1931 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    7
  1935 ;; This function calls:
  1936 ;;		_DelayFor18TCY
  1937 ;; This function is called by:
  1938 ;;		_OpenXLCD
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text8
  1943  001204                     __ptext8:
  1944                           	opt stack 0
  1945  001204                     _SetDDRamAddr:
  1946                           	opt stack 22
  1947                           
  1948                           ;incstack = 0
  1949                           ;SetDDRamAddr@DDaddr stored from wreg
  1950  001204  0100               	movlb	0	; () banked
  1951  001206  6F7A               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  1952                           
  1953                           ;nxlcd.c: 186: TRISD &= 0x0f;
  1954  001208  0E0F               	movlw	15
  1955  00120A  1695               	andwf	3989,f,c	;volatile
  1956                           
  1957                           ;nxlcd.c: 187: PORTD &= 0x0f;
  1958  00120C  0E0F               	movlw	15
  1959  00120E  1683               	andwf	3971,f,c	;volatile
  1960                           
  1961                           ;nxlcd.c: 188: PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  1962  001210  0100               	movlb	0	; () banked
  1963  001212  517A               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  1964  001214  0980               	iorlw	128
  1965  001216  0BF0               	andlw	240
  1966  001218  1283               	iorwf	3971,f,c	;volatile
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;nxlcd.c: 194: LATEbits.LATE2 = 0;
  1970  00121A  948D               	bcf	3981,2,c	;volatile
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;nxlcd.c: 195: LATEbits.LATE0 = 0;
  1974  00121C  908D               	bcf	3981,0,c	;volatile
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;nxlcd.c: 196: DelayFor18TCY();
  1978  00121E  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1979                           
  1980                           ;nxlcd.c: 197: LATEbits.LATE1 = 1;
  1981  001222  828D               	bsf	3981,1,c	;volatile
  1982                           
  1983                           ;nxlcd.c: 198: DelayFor18TCY();
  1984  001224  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  1985                           
  1986                           ;nxlcd.c: 199: LATEbits.LATE1 = 0;
  1987  001228  928D               	bcf	3981,1,c	;volatile
  1988                           
  1989                           ;nxlcd.c: 201: PORTD &= 0x0f;
  1990  00122A  0E0F               	movlw	15
  1991  00122C  1683               	andwf	3971,f,c	;volatile
  1992                           
  1993                           ;nxlcd.c: 202: PORTD |= ((DDaddr<<4)&0xf0);
  1994  00122E  0100               	movlb	0	; () banked
  1995  001230  397A               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  1996  001232  0BF0               	andlw	240
  1997  001234  0BF0               	andlw	240
  1998  001236  1283               	iorwf	3971,f,c	;volatile
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;nxlcd.c: 207: DelayFor18TCY();
  2002  001238  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  2003                           
  2004                           ;nxlcd.c: 208: LATEbits.LATE1 = 1;
  2005  00123C  828D               	bsf	3981,1,c	;volatile
  2006                           
  2007                           ;nxlcd.c: 209: DelayFor18TCY();
  2008  00123E  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  2009                           
  2010                           ;nxlcd.c: 210: LATEbits.LATE1 = 0;
  2011  001242  928D               	bcf	3981,1,c	;volatile
  2012                           
  2013                           ;nxlcd.c: 212: TRISD |= 0xf0;
  2014  001244  0EF0               	movlw	240
  2015  001246  1295               	iorwf	3989,f,c	;volatile
  2016  001248  0012               	return	
  2017  00124A                     __end_of_SetDDRamAddr:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           intcon	equ	0xFF2
  2024                           intcon2	equ	0xFF1
  2025                           intcon3	equ	0xFF0
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _DelayXLCD *****************
  2031 ;; Defined at:
  2032 ;;		line 22 in file "nxlcd.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2048 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2049 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    6
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_OpenXLCD
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text9
  2061  001464                     __ptext9:
  2062                           	opt stack 0
  2063  001464                     _DelayXLCD:
  2064                           	opt stack 23
  2065                           
  2066                           ;nxlcd.c: 24: _delay((unsigned long)((5)*(20000000/4000.0)));
  2067                           
  2068                           ;incstack = 0
  2069  001464  0E21               	movlw	33
  2070  001466  0100               	movlb	0	; () banked
  2071  001468  6F7A               	movwf	??_DelayXLCD& (0+255),b
  2072  00146A  0E76               	movlw	118
  2073  00146C                     u1667:
  2074  00146C  2EE8               	decfsz	wreg,f,c
  2075  00146E  D7FE               	bra	u1667
  2076  001470  2F7A               	decfsz	??_DelayXLCD& (0+255),f,b
  2077  001472  D7FC               	bra	u1667
  2078  001474  F000               	nop	
  2079  001476  0012               	return		;funcret
  2080  001478                     __end_of_DelayXLCD:
  2081                           	opt stack 0
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           intcon	equ	0xFF2
  2087                           intcon2	equ	0xFF1
  2088                           intcon3	equ	0xFF0
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           status	equ	0xFD8
  2092                           
  2093 ;; *************** function _DelayPORXLCD *****************
  2094 ;; Defined at:
  2095 ;;		line 17 in file "nxlcd.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2109 ;;      Params:         0       0       0       0       0       0       0       0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2111 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2112 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2113 ;;Total ram usage:        1 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    6
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_OpenXLCD
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text10
  2124  001478                     __ptext10:
  2125                           	opt stack 0
  2126  001478                     _DelayPORXLCD:
  2127                           	opt stack 23
  2128                           
  2129                           ;nxlcd.c: 19: _delay((unsigned long)((15)*(20000000/4000.0)));
  2130                           
  2131                           ;incstack = 0
  2132  001478  0E62               	movlw	98
  2133  00147A  0100               	movlb	0	; () banked
  2134  00147C  6F7A               	movwf	??_DelayPORXLCD& (0+255),b
  2135  00147E  0E65               	movlw	101
  2136  001480                     u1677:
  2137  001480  2EE8               	decfsz	wreg,f,c
  2138  001482  D7FE               	bra	u1677
  2139  001484  2F7A               	decfsz	??_DelayPORXLCD& (0+255),f,b
  2140  001486  D7FC               	bra	u1677
  2141  001488  D000               	nop2	
  2142  00148A  0012               	return		;funcret
  2143  00148C                     __end_of_DelayPORXLCD:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           intcon	equ	0xFF2
  2150                           intcon2	equ	0xFF1
  2151                           intcon3	equ	0xFF0
  2152                           postinc0	equ	0xFEE
  2153                           wreg	equ	0xFE8
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function _BusyXLCD *****************
  2157 ;; Defined at:
  2158 ;;		line 227 in file "nxlcd.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      unsigned char 
  2165 ;; Registers used:
  2166 ;;		wreg, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2175 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    7
  2179 ;; This function calls:
  2180 ;;		_DelayFor18TCY
  2181 ;; This function is called by:
  2182 ;;		_OpenXLCD
  2183 ;;		_putsXLCD
  2184 ;;		_putrsXLCD
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text11
  2189  0013CA                     __ptext11:
  2190                           	opt stack 0
  2191  0013CA                     _BusyXLCD:
  2192                           	opt stack 22
  2193                           
  2194                           ;nxlcd.c: 229: LATEbits.LATE2 = 1;
  2195                           
  2196                           ;incstack = 0
  2197  0013CA  848D               	bsf	3981,2,c	;volatile
  2198                           
  2199                           ;nxlcd.c: 230: LATEbits.LATE0 = 0;
  2200  0013CC  908D               	bcf	3981,0,c	;volatile
  2201                           
  2202                           ;nxlcd.c: 231: DelayFor18TCY();
  2203  0013CE  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  2204                           
  2205                           ;nxlcd.c: 232: LATEbits.LATE1 = 1;
  2206  0013D2  828D               	bsf	3981,1,c	;volatile
  2207                           
  2208                           ;nxlcd.c: 233: DelayFor18TCY();
  2209  0013D4  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  2210                           
  2211                           ;nxlcd.c: 249: if(PORTD&0x80)
  2212  0013D8  AE83               	btfss	3971,7,c	;volatile
  2213  0013DA  D00A               	goto	l214
  2214                           
  2215                           ;nxlcd.c: 253: {
  2216                           ;nxlcd.c: 254: LATEbits.LATE1 = 0;
  2217  0013DC  928D               	bcf	3981,1,c	;volatile
  2218                           
  2219                           ;nxlcd.c: 255: DelayFor18TCY();
  2220  0013DE  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  2221                           
  2222                           ;nxlcd.c: 256: LATEbits.LATE1 = 1;
  2223  0013E2  828D               	bsf	3981,1,c	;volatile
  2224                           
  2225                           ;nxlcd.c: 257: DelayFor18TCY();
  2226  0013E4  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  2227                           
  2228                           ;nxlcd.c: 258: LATEbits.LATE1 = 0;
  2229  0013E8  928D               	bcf	3981,1,c	;volatile
  2230                           
  2231                           ;nxlcd.c: 259: LATEbits.LATE2 = 0;
  2232  0013EA  948D               	bcf	3981,2,c	;volatile
  2233                           
  2234                           ;nxlcd.c: 260: return 1;
  2235  0013EC  0E01               	movlw	1
  2236                           
  2237                           ;nxlcd.c: 261: }
  2238  0013EE  0012               	return	
  2239  0013F0                     l214:
  2240                           
  2241                           ;nxlcd.c: 262: else
  2242                           ;nxlcd.c: 263: {
  2243                           ;nxlcd.c: 264: LATEbits.LATE1 = 0;
  2244  0013F0  928D               	bcf	3981,1,c	;volatile
  2245                           
  2246                           ;nxlcd.c: 265: DelayFor18TCY();
  2247  0013F2  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  2248                           
  2249                           ;nxlcd.c: 266: LATEbits.LATE1 = 1;
  2250  0013F6  828D               	bsf	3981,1,c	;volatile
  2251                           
  2252                           ;nxlcd.c: 267: DelayFor18TCY();
  2253  0013F8  EC46  F00A         	call	_DelayFor18TCY	;wreg free
  2254                           
  2255                           ;nxlcd.c: 268: LATEbits.LATE1 = 0;
  2256  0013FC  928D               	bcf	3981,1,c	;volatile
  2257                           
  2258                           ;nxlcd.c: 269: LATEbits.LATE2 = 0;
  2259  0013FE  948D               	bcf	3981,2,c	;volatile
  2260                           
  2261                           ;nxlcd.c: 270: return 0;
  2262  001400  0E00               	movlw	0
  2263  001402  0012               	return	
  2264  001404                     __end_of_BusyXLCD:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           intcon	equ	0xFF2
  2271                           intcon2	equ	0xFF1
  2272                           intcon3	equ	0xFF0
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function _DelayFor18TCY *****************
  2278 ;; Defined at:
  2279 ;;		line 12 in file "nxlcd.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2293 ;;      Params:         0       0       0       0       0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    6
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_SetDDRamAddr
  2304 ;;		_BusyXLCD
  2305 ;;		_WriteCmdXLCD
  2306 ;;		_WriteDataXLCD
  2307 ;;		_SetCGRamAddr
  2308 ;;		_ReadAddrXLCD
  2309 ;;		_ReadDataXLCD
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text12
  2314  00148C                     __ptext12:
  2315                           	opt stack 0
  2316  00148C                     _DelayFor18TCY:
  2317                           	opt stack 22
  2318                           
  2319                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2320                           
  2321                           ;incstack = 0
  2322  00148C  0E21               	movlw	33
  2323  00148E                     u1687:
  2324  00148E  2EE8               	decfsz	wreg,f,c
  2325  001490  D7FE               	bra	u1687
  2326  001492  F000               	nop	
  2327  001494  0012               	return		;funcret
  2328  001496                     __end_of_DelayFor18TCY:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           intcon	equ	0xFF2
  2335                           intcon2	equ	0xFF1
  2336                           intcon3	equ	0xFF0
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _HighPriorityISR *****************
  2342 ;; Defined at:
  2343 ;;		line 59 in file "main.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          0      21       0       0       0       0       0       0       0
  2360 ;;      Totals:         0      21       0       0       0       0       0       0       0
  2361 ;;Total ram usage:       21 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    5
  2364 ;; This function calls:
  2365 ;;		___awdiv
  2366 ;;		___awmod
  2367 ;;		___llmod
  2368 ;;		i1_WriteCmdXLCD
  2369 ;;		i1_WriteDataXLCD
  2370 ;;		i1___lldiv
  2371 ;; This function is called by:
  2372 ;;		Interrupt level 1
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	intcodelo
  2377  000018                     __pintcodelo:
  2378                           	opt stack 0
  2379  000018                     _HighPriorityISR:
  2380                           	opt stack 22
  2381                           
  2382                           ;incstack = 0
  2383  000018  8043               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2384  00001A  CFD8 F065          	movff	status,??_HighPriorityISR
  2385  00001E  CFE8 F066          	movff	wreg,??_HighPriorityISR+1
  2386  000022  CFE0 F067          	movff	bsr,??_HighPriorityISR+2
  2387  000026  CFFA F068          	movff	pclath,??_HighPriorityISR+3
  2388  00002A  CFFB F069          	movff	pclatu,??_HighPriorityISR+4
  2389  00002E  CFE9 F06A          	movff	fsr0l,??_HighPriorityISR+5
  2390  000032  CFEA F06B          	movff	fsr0h,??_HighPriorityISR+6
  2391  000036  CFE1 F06C          	movff	fsr1l,??_HighPriorityISR+7
  2392  00003A  CFE2 F06D          	movff	fsr1h,??_HighPriorityISR+8
  2393  00003E  CFD9 F06E          	movff	fsr2l,??_HighPriorityISR+9
  2394  000042  CFDA F06F          	movff	fsr2h,??_HighPriorityISR+10
  2395  000046  CFF3 F070          	movff	prodl,??_HighPriorityISR+11
  2396  00004A  CFF4 F071          	movff	prodh,??_HighPriorityISR+12
  2397  00004E  CFF6 F072          	movff	tblptrl,??_HighPriorityISR+13
  2398  000052  CFF7 F073          	movff	tblptrh,??_HighPriorityISR+14
  2399  000056  CFF8 F074          	movff	tblptru,??_HighPriorityISR+15
  2400  00005A  CFF5 F075          	movff	tablat,??_HighPriorityISR+16
  2401  00005E  C043  F076         	movff	btemp,??_HighPriorityISR+17
  2402  000062  C044  F077         	movff	btemp+1,??_HighPriorityISR+18
  2403  000066  C045  F078         	movff	btemp+2,??_HighPriorityISR+19
  2404  00006A  C046  F079         	movff	btemp+3,??_HighPriorityISR+20
  2405                           
  2406                           ;main.c: 60: if (INTCONbits.TMR0IF) {
  2407  00006E  A4F2               	btfss	intcon,2,c	;volatile
  2408  000070  D121               	goto	i1l93
  2409                           
  2410                           ;main.c: 61: INTCONbits.TMR0IF = 0;
  2411  000072  94F2               	bcf	intcon,2,c	;volatile
  2412                           
  2413                           ;main.c: 64: TMR0H = 0x67;
  2414  000074  0E67               	movlw	103
  2415  000076  6ED7               	movwf	4055,c	;volatile
  2416                           
  2417                           ;main.c: 65: TMR0L = 0x6A;
  2418  000078  0E6A               	movlw	106
  2419  00007A  6ED6               	movwf	4054,c	;volatile
  2420                           
  2421                           ;main.c: 68: WriteCmdXLCD(0xC8);
  2422  00007C  0EC8               	movlw	200
  2423  00007E  EC88  F009         	call	i1_WriteCmdXLCD
  2424                           
  2425                           ;main.c: 69: milhar = resultadoAD / 1000;
  2426  000082  C0A1  F01D         	movff	_resultadoAD,i1___lldiv@dividend
  2427  000086  C0A2  F01E         	movff	_resultadoAD+1,i1___lldiv@dividend+1
  2428  00008A  C0A3  F01F         	movff	_resultadoAD+2,i1___lldiv@dividend+2
  2429  00008E  C0A4  F020         	movff	_resultadoAD+3,i1___lldiv@dividend+3
  2430  000092  0EE8               	movlw	232
  2431  000094  6E21               	movwf	i1___lldiv@divisor,c
  2432  000096  0E03               	movlw	3
  2433  000098  6E22               	movwf	i1___lldiv@divisor+1,c
  2434  00009A  0E00               	movlw	0
  2435  00009C  6E23               	movwf	i1___lldiv@divisor+2,c
  2436  00009E  0E00               	movlw	0
  2437  0000A0  6E24               	movwf	i1___lldiv@divisor+3,c
  2438  0000A2  EC6D  F007         	call	i1___lldiv	;wreg free
  2439  0000A6  C01D  F03E         	movff	?i1___lldiv,_milhar
  2440  0000AA  C01E  F03F         	movff	?i1___lldiv+1,_milhar+1
  2441  0000AE  C01F  F040         	movff	?i1___lldiv+2,_milhar+2
  2442  0000B2  C020  F041         	movff	?i1___lldiv+3,_milhar+3
  2443                           
  2444                           ;main.c: 70: aux = resultadoAD % 1000;
  2445  0000B6  C0A1  F01D         	movff	_resultadoAD,___llmod@dividend
  2446  0000BA  C0A2  F01E         	movff	_resultadoAD+1,___llmod@dividend+1
  2447  0000BE  C0A3  F01F         	movff	_resultadoAD+2,___llmod@dividend+2
  2448  0000C2  C0A4  F020         	movff	_resultadoAD+3,___llmod@dividend+3
  2449  0000C6  0EE8               	movlw	232
  2450  0000C8  6E21               	movwf	___llmod@divisor,c
  2451  0000CA  0E03               	movlw	3
  2452  0000CC  6E22               	movwf	___llmod@divisor+1,c
  2453  0000CE  0E00               	movlw	0
  2454  0000D0  6E23               	movwf	___llmod@divisor+2,c
  2455  0000D2  0E00               	movlw	0
  2456  0000D4  6E24               	movwf	___llmod@divisor+3,c
  2457  0000D6  ECA3  F008         	call	___llmod	;wreg free
  2458  0000DA  C01D  F02E         	movff	?___llmod,_aux
  2459  0000DE  C01E  F02F         	movff	?___llmod+1,_aux+1
  2460  0000E2  C01F  F030         	movff	?___llmod+2,_aux+2
  2461  0000E6  C020  F031         	movff	?___llmod+3,_aux+3
  2462                           
  2463                           ;main.c: 71: centena = aux / 100;
  2464  0000EA  C02E  F01D         	movff	_aux,i1___lldiv@dividend
  2465  0000EE  C02F  F01E         	movff	_aux+1,i1___lldiv@dividend+1
  2466  0000F2  C030  F01F         	movff	_aux+2,i1___lldiv@dividend+2
  2467  0000F6  C031  F020         	movff	_aux+3,i1___lldiv@dividend+3
  2468  0000FA  0E64               	movlw	100
  2469  0000FC  6E21               	movwf	i1___lldiv@divisor,c
  2470  0000FE  0E00               	movlw	0
  2471  000100  6E22               	movwf	i1___lldiv@divisor+1,c
  2472  000102  0E00               	movlw	0
  2473  000104  6E23               	movwf	i1___lldiv@divisor+2,c
  2474  000106  0E00               	movlw	0
  2475  000108  6E24               	movwf	i1___lldiv@divisor+3,c
  2476  00010A  EC6D  F007         	call	i1___lldiv	;wreg free
  2477  00010E  C01D  F03A         	movff	?i1___lldiv,_centena
  2478  000112  C01E  F03B         	movff	?i1___lldiv+1,_centena+1
  2479  000116  C01F  F03C         	movff	?i1___lldiv+2,_centena+2
  2480  00011A  C020  F03D         	movff	?i1___lldiv+3,_centena+3
  2481                           
  2482                           ;main.c: 72: aux = aux % 100;
  2483  00011E  C02E  F01D         	movff	_aux,___llmod@dividend
  2484  000122  C02F  F01E         	movff	_aux+1,___llmod@dividend+1
  2485  000126  C030  F01F         	movff	_aux+2,___llmod@dividend+2
  2486  00012A  C031  F020         	movff	_aux+3,___llmod@dividend+3
  2487  00012E  0E64               	movlw	100
  2488  000130  6E21               	movwf	___llmod@divisor,c
  2489  000132  0E00               	movlw	0
  2490  000134  6E22               	movwf	___llmod@divisor+1,c
  2491  000136  0E00               	movlw	0
  2492  000138  6E23               	movwf	___llmod@divisor+2,c
  2493  00013A  0E00               	movlw	0
  2494  00013C  6E24               	movwf	___llmod@divisor+3,c
  2495  00013E  ECA3  F008         	call	___llmod	;wreg free
  2496  000142  C01D  F02E         	movff	?___llmod,_aux
  2497  000146  C01E  F02F         	movff	?___llmod+1,_aux+1
  2498  00014A  C01F  F030         	movff	?___llmod+2,_aux+2
  2499  00014E  C020  F031         	movff	?___llmod+3,_aux+3
  2500                           
  2501                           ;main.c: 73: dezena = aux / 10;
  2502  000152  C02E  F01D         	movff	_aux,i1___lldiv@dividend
  2503  000156  C02F  F01E         	movff	_aux+1,i1___lldiv@dividend+1
  2504  00015A  C030  F01F         	movff	_aux+2,i1___lldiv@dividend+2
  2505  00015E  C031  F020         	movff	_aux+3,i1___lldiv@dividend+3
  2506  000162  0E0A               	movlw	10
  2507  000164  6E21               	movwf	i1___lldiv@divisor,c
  2508  000166  0E00               	movlw	0
  2509  000168  6E22               	movwf	i1___lldiv@divisor+1,c
  2510  00016A  0E00               	movlw	0
  2511  00016C  6E23               	movwf	i1___lldiv@divisor+2,c
  2512  00016E  0E00               	movlw	0
  2513  000170  6E24               	movwf	i1___lldiv@divisor+3,c
  2514  000172  EC6D  F007         	call	i1___lldiv	;wreg free
  2515  000176  C01D  F036         	movff	?i1___lldiv,_dezena
  2516  00017A  C01E  F037         	movff	?i1___lldiv+1,_dezena+1
  2517  00017E  C01F  F038         	movff	?i1___lldiv+2,_dezena+2
  2518  000182  C020  F039         	movff	?i1___lldiv+3,_dezena+3
  2519                           
  2520                           ;main.c: 74: unidade = aux % 10;
  2521  000186  C02E  F01D         	movff	_aux,___llmod@dividend
  2522  00018A  C02F  F01E         	movff	_aux+1,___llmod@dividend+1
  2523  00018E  C030  F01F         	movff	_aux+2,___llmod@dividend+2
  2524  000192  C031  F020         	movff	_aux+3,___llmod@dividend+3
  2525  000196  0E0A               	movlw	10
  2526  000198  6E21               	movwf	___llmod@divisor,c
  2527  00019A  0E00               	movlw	0
  2528  00019C  6E22               	movwf	___llmod@divisor+1,c
  2529  00019E  0E00               	movlw	0
  2530  0001A0  6E23               	movwf	___llmod@divisor+2,c
  2531  0001A2  0E00               	movlw	0
  2532  0001A4  6E24               	movwf	___llmod@divisor+3,c
  2533  0001A6  ECA3  F008         	call	___llmod	;wreg free
  2534  0001AA  C01D  F032         	movff	?___llmod,_unidade
  2535  0001AE  C01E  F033         	movff	?___llmod+1,_unidade+1
  2536  0001B2  C01F  F034         	movff	?___llmod+2,_unidade+2
  2537  0001B6  C020  F035         	movff	?___llmod+3,_unidade+3
  2538  0001BA  A2AC               	btfss	4012,1,c	;volatile
  2539  0001BC  D7FE               	goto	i1l95
  2540                           
  2541                           ;main.c: 77: TXREG = 0x41;
  2542  0001BE  0E41               	movlw	65
  2543  0001C0  6EAD               	movwf	4013,c	;volatile
  2544  0001C2  A2AC               	btfss	4012,1,c	;volatile
  2545  0001C4  D7FE               	goto	i1l98
  2546                           
  2547                           ;main.c: 80: TXREG = 0x30 + centena;
  2548  0001C6  503A               	movf	_centena,w,c
  2549  0001C8  0F30               	addlw	48
  2550  0001CA  6EAD               	movwf	4013,c	;volatile
  2551                           
  2552                           ;main.c: 81: WriteDataXLCD(0x30 + centena);
  2553  0001CC  503A               	movf	_centena,w,c
  2554  0001CE  0F30               	addlw	48
  2555  0001D0  EC69  F009         	call	i1_WriteDataXLCD
  2556  0001D4  A2AC               	btfss	4012,1,c	;volatile
  2557  0001D6  D7FE               	goto	i1l101
  2558                           
  2559                           ;main.c: 84: TXREG = 0x30 + dezena;
  2560  0001D8  5036               	movf	_dezena,w,c
  2561  0001DA  0F30               	addlw	48
  2562  0001DC  6EAD               	movwf	4013,c	;volatile
  2563                           
  2564                           ;main.c: 85: WriteDataXLCD(0x30 + dezena);
  2565  0001DE  5036               	movf	_dezena,w,c
  2566  0001E0  0F30               	addlw	48
  2567  0001E2  EC69  F009         	call	i1_WriteDataXLCD
  2568  0001E6  A2AC               	btfss	4012,1,c	;volatile
  2569  0001E8  D7FE               	goto	i1l104
  2570                           
  2571                           ;main.c: 88: TXREG = 0x2C;
  2572  0001EA  0E2C               	movlw	44
  2573  0001EC  6EAD               	movwf	4013,c	;volatile
  2574                           
  2575                           ;main.c: 89: WriteDataXLCD(0x2C);
  2576  0001EE  0E2C               	movlw	44
  2577  0001F0  EC69  F009         	call	i1_WriteDataXLCD
  2578  0001F4  A2AC               	btfss	4012,1,c	;volatile
  2579  0001F6  D7FE               	goto	i1l107
  2580                           
  2581                           ;main.c: 92: TXREG = 0x30 + unidade;
  2582  0001F8  5032               	movf	_unidade,w,c
  2583  0001FA  0F30               	addlw	48
  2584  0001FC  6EAD               	movwf	4013,c	;volatile
  2585                           
  2586                           ;main.c: 93: WriteDataXLCD(0x30 + unidade);
  2587  0001FE  5032               	movf	_unidade,w,c
  2588  000200  0F30               	addlw	48
  2589  000202  EC69  F009         	call	i1_WriteDataXLCD
  2590  000206  A2AC               	btfss	4012,1,c	;volatile
  2591  000208  D7FE               	goto	i1l110
  2592                           
  2593                           ;main.c: 96: TXREG = 0x43;
  2594  00020A  0E43               	movlw	67
  2595  00020C  6EAD               	movwf	4013,c	;volatile
  2596                           
  2597                           ;main.c: 97: WriteDataXLCD(0x43);
  2598  00020E  0E43               	movlw	67
  2599  000210  EC69  F009         	call	i1_WriteDataXLCD
  2600  000214  A2AC               	btfss	4012,1,c	;volatile
  2601  000216  D7FE               	goto	i1l113
  2602                           
  2603                           ;main.c: 101: TXREG = 0x3B;
  2604  000218  0E3B               	movlw	59
  2605  00021A  6EAD               	movwf	4013,c	;volatile
  2606                           
  2607                           ;main.c: 104: WriteCmdXLCD(0x8B);
  2608  00021C  0E8B               	movlw	139
  2609  00021E  EC88  F009         	call	i1_WriteCmdXLCD
  2610                           
  2611                           ;main.c: 105: dezenaDes = tempDesejada / 10;
  2612  000222  C042  F01D         	movff	_tempDesejada,___awdiv@dividend
  2613  000226  6A1E               	clrf	___awdiv@dividend+1,c
  2614  000228  0E00               	movlw	0
  2615  00022A  6E20               	movwf	___awdiv@divisor+1,c
  2616  00022C  0E0A               	movlw	10
  2617  00022E  6E1F               	movwf	___awdiv@divisor,c
  2618  000230  ECAF  F007         	call	___awdiv	;wreg free
  2619  000234  C01D  F02A         	movff	?___awdiv,_dezenaDes
  2620  000238  C01E  F02B         	movff	?___awdiv+1,_dezenaDes+1
  2621  00023C  0E00               	movlw	0
  2622  00023E  BE2B               	btfsc	_dezenaDes+1,7,c
  2623  000240  0EFF               	movlw	-1
  2624  000242  6E2C               	movwf	_dezenaDes+2,c
  2625  000244  6E2D               	movwf	_dezenaDes+3,c
  2626                           
  2627                           ;main.c: 106: unidadeDes = tempDesejada % 10;
  2628  000246  C042  F01D         	movff	_tempDesejada,___awmod@dividend
  2629  00024A  6A1E               	clrf	___awmod@dividend+1,c
  2630  00024C  0E00               	movlw	0
  2631  00024E  6E20               	movwf	___awmod@divisor+1,c
  2632  000250  0E0A               	movlw	10
  2633  000252  6E1F               	movwf	___awmod@divisor,c
  2634  000254  EC33  F008         	call	___awmod	;wreg free
  2635  000258  C01D  F026         	movff	?___awmod,_unidadeDes
  2636  00025C  C01E  F027         	movff	?___awmod+1,_unidadeDes+1
  2637  000260  0E00               	movlw	0
  2638  000262  BE27               	btfsc	_unidadeDes+1,7,c
  2639  000264  0EFF               	movlw	-1
  2640  000266  6E28               	movwf	_unidadeDes+2,c
  2641  000268  6E29               	movwf	_unidadeDes+3,c
  2642  00026A  A2AC               	btfss	4012,1,c	;volatile
  2643  00026C  D7FE               	goto	i1l116
  2644                           
  2645                           ;main.c: 109: TXREG = 0x44;
  2646  00026E  0E44               	movlw	68
  2647  000270  6EAD               	movwf	4013,c	;volatile
  2648  000272  A2AC               	btfss	4012,1,c	;volatile
  2649  000274  D7FE               	goto	i1l119
  2650                           
  2651                           ;main.c: 112: TXREG = 0x30 + dezenaDes;
  2652  000276  502A               	movf	_dezenaDes,w,c
  2653  000278  0F30               	addlw	48
  2654  00027A  6EAD               	movwf	4013,c	;volatile
  2655                           
  2656                           ;main.c: 113: WriteDataXLCD(0x30 + dezenaDes);
  2657  00027C  502A               	movf	_dezenaDes,w,c
  2658  00027E  0F30               	addlw	48
  2659  000280  EC69  F009         	call	i1_WriteDataXLCD
  2660  000284  A2AC               	btfss	4012,1,c	;volatile
  2661  000286  D7FE               	goto	i1l122
  2662                           
  2663                           ;main.c: 116: TXREG = 0x30 + unidadeDes;
  2664  000288  5026               	movf	_unidadeDes,w,c
  2665  00028A  0F30               	addlw	48
  2666  00028C  6EAD               	movwf	4013,c	;volatile
  2667                           
  2668                           ;main.c: 117: WriteDataXLCD(0x30 + unidadeDes);
  2669  00028E  5026               	movf	_unidadeDes,w,c
  2670  000290  0F30               	addlw	48
  2671  000292  EC69  F009         	call	i1_WriteDataXLCD
  2672  000296  A2AC               	btfss	4012,1,c	;volatile
  2673  000298  D7FE               	goto	i1l125
  2674                           
  2675                           ;main.c: 120: TXREG = 0x43;
  2676  00029A  0E43               	movlw	67
  2677  00029C  6EAD               	movwf	4013,c	;volatile
  2678                           
  2679                           ;main.c: 121: WriteDataXLCD(0x43);
  2680  00029E  0E43               	movlw	67
  2681  0002A0  EC69  F009         	call	i1_WriteDataXLCD
  2682  0002A4  A2AC               	btfss	4012,1,c	;volatile
  2683  0002A6  D7FE               	goto	i1l128
  2684                           
  2685                           ;main.c: 124: TXREG = '\r';
  2686  0002A8  0E0D               	movlw	13
  2687  0002AA  6EAD               	movwf	4013,c	;volatile
  2688  0002AC  A2AC               	btfss	4012,1,c	;volatile
  2689  0002AE  D7FE               	goto	i1l131
  2690                           
  2691                           ;main.c: 127: TXREG = '\n';
  2692  0002B0  0E0A               	movlw	10
  2693  0002B2  6EAD               	movwf	4013,c	;volatile
  2694  0002B4                     i1l93:
  2695  0002B4  C079  F046         	movff	??_HighPriorityISR+20,btemp+3
  2696  0002B8  C078  F045         	movff	??_HighPriorityISR+19,btemp+2
  2697  0002BC  C077  F044         	movff	??_HighPriorityISR+18,btemp+1
  2698  0002C0  C076  F043         	movff	??_HighPriorityISR+17,btemp
  2699  0002C4  C075  FFF5         	movff	??_HighPriorityISR+16,tablat
  2700  0002C8  C074  FFF8         	movff	??_HighPriorityISR+15,tblptru
  2701  0002CC  C073  FFF7         	movff	??_HighPriorityISR+14,tblptrh
  2702  0002D0  C072  FFF6         	movff	??_HighPriorityISR+13,tblptrl
  2703  0002D4  C071  FFF4         	movff	??_HighPriorityISR+12,prodh
  2704  0002D8  C070  FFF3         	movff	??_HighPriorityISR+11,prodl
  2705  0002DC  C06F  FFDA         	movff	??_HighPriorityISR+10,fsr2h
  2706  0002E0  C06E  FFD9         	movff	??_HighPriorityISR+9,fsr2l
  2707  0002E4  C06D  FFE2         	movff	??_HighPriorityISR+8,fsr1h
  2708  0002E8  C06C  FFE1         	movff	??_HighPriorityISR+7,fsr1l
  2709  0002EC  C06B  FFEA         	movff	??_HighPriorityISR+6,fsr0h
  2710  0002F0  C06A  FFE9         	movff	??_HighPriorityISR+5,fsr0l
  2711  0002F4  C069  FFFB         	movff	??_HighPriorityISR+4,pclatu
  2712  0002F8  C068  FFFA         	movff	??_HighPriorityISR+3,pclath
  2713  0002FC  C067  FFE0         	movff	??_HighPriorityISR+2,bsr
  2714  000300  C066  FFE8         	movff	??_HighPriorityISR+1,wreg
  2715  000304  C065  FFD8         	movff	??_HighPriorityISR,status
  2716  000308  9043               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2717  00030A  0010               	retfie	
  2718  00030C                     __end_of_HighPriorityISR:
  2719                           	opt stack 0
  2720                           pclatu	equ	0xFFB
  2721                           pclath	equ	0xFFA
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           intcon2	equ	0xFF1
  2730                           intcon3	equ	0xFF0
  2731                           postinc0	equ	0xFEE
  2732                           fsr0h	equ	0xFEA
  2733                           fsr0l	equ	0xFE9
  2734                           wreg	equ	0xFE8
  2735                           fsr1h	equ	0xFE2
  2736                           fsr1l	equ	0xFE1
  2737                           bsr	equ	0xFE0
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function i1___lldiv *****************
  2743 ;; Defined at:
  2744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  dividend        4   28[COMRAM] unsigned long 
  2747 ;;  divisor         4   32[COMRAM] unsigned long 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  __lldiv         4    0[BANK0 ] unsigned long 
  2750 ;;  __lldiv         1    4[BANK0 ] unsigned char 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  4   28[COMRAM] unsigned long 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2760 ;;      Params:         8       0       0       0       0       0       0       0       0
  2761 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2763 ;;      Totals:         8       5       0       0       0       0       0       0       0
  2764 ;;Total ram usage:       13 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    3
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_HighPriorityISR
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text14
  2775  000EDA                     __ptext14:
  2776                           	opt stack 0
  2777  000EDA                     i1___lldiv:
  2778                           	opt stack 23
  2779                           
  2780                           ;incstack = 0
  2781  000EDA  0E00               	movlw	0
  2782  000EDC  0100               	movlb	0	; () banked
  2783  000EDE  6F60               	movwf	i1___lldiv@quotient& (0+255),b
  2784  000EE0  0E00               	movlw	0
  2785  000EE2  6F61               	movwf	(i1___lldiv@quotient+1)& (0+255),b
  2786  000EE4  0E00               	movlw	0
  2787  000EE6  6F62               	movwf	(i1___lldiv@quotient+2)& (0+255),b
  2788  000EE8  0E00               	movlw	0
  2789  000EEA  6F63               	movwf	(i1___lldiv@quotient+3)& (0+255),b
  2790                           
  2791                           ; BSR set to: 0
  2792  000EEC  5021               	movf	i1___lldiv@divisor,w,c
  2793  000EEE  1022               	iorwf	i1___lldiv@divisor+1,w,c
  2794  000EF0  1023               	iorwf	i1___lldiv@divisor+2,w,c
  2795  000EF2  1024               	iorwf	i1___lldiv@divisor+3,w,c
  2796  000EF4  B4D8               	btfsc	status,2,c
  2797  000EF6  D02A               	goto	i1l602
  2798                           
  2799                           ; BSR set to: 0
  2800  000EF8  0E01               	movlw	1
  2801  000EFA  6F64               	movwf	i1___lldiv@counter& (0+255),b
  2802  000EFC  D006               	goto	i1l597
  2803  000EFE                     
  2804                           ; BSR set to: 0
  2805                           
  2806                           ; BSR set to: 0
  2807  000EFE  90D8               	bcf	status,0,c
  2808  000F00  3621               	rlcf	i1___lldiv@divisor,f,c
  2809  000F02  3622               	rlcf	i1___lldiv@divisor+1,f,c
  2810  000F04  3623               	rlcf	i1___lldiv@divisor+2,f,c
  2811  000F06  3624               	rlcf	i1___lldiv@divisor+3,f,c
  2812  000F08  2B64               	incf	i1___lldiv@counter& (0+255),f,b
  2813  000F0A                     i1l597:
  2814                           
  2815                           ; BSR set to: 0
  2816                           
  2817                           ; BSR set to: 0
  2818  000F0A  AE24               	btfss	i1___lldiv@divisor+3,7,c
  2819  000F0C  D7F8               	goto	i1l598
  2820  000F0E                     i1u148_20:
  2821                           
  2822                           ; BSR set to: 0
  2823                           
  2824                           ; BSR set to: 0
  2825                           
  2826                           ; BSR set to: 0
  2827  000F0E  90D8               	bcf	status,0,c
  2828  000F10  3760               	rlcf	i1___lldiv@quotient& (0+255),f,b
  2829  000F12  3761               	rlcf	(i1___lldiv@quotient+1)& (0+255),f,b
  2830  000F14  3762               	rlcf	(i1___lldiv@quotient+2)& (0+255),f,b
  2831  000F16  3763               	rlcf	(i1___lldiv@quotient+3)& (0+255),f,b
  2832                           
  2833                           ; BSR set to: 0
  2834  000F18  5021               	movf	i1___lldiv@divisor,w,c
  2835  000F1A  5C1D               	subwf	i1___lldiv@dividend,w,c
  2836  000F1C  5022               	movf	i1___lldiv@divisor+1,w,c
  2837  000F1E  581E               	subwfb	i1___lldiv@dividend+1,w,c
  2838  000F20  5023               	movf	i1___lldiv@divisor+2,w,c
  2839  000F22  581F               	subwfb	i1___lldiv@dividend+2,w,c
  2840  000F24  5024               	movf	i1___lldiv@divisor+3,w,c
  2841  000F26  5820               	subwfb	i1___lldiv@dividend+3,w,c
  2842  000F28  A0D8               	btfss	status,0,c
  2843  000F2A  D009               	goto	i1l601
  2844                           
  2845                           ; BSR set to: 0
  2846  000F2C  5021               	movf	i1___lldiv@divisor,w,c
  2847  000F2E  5E1D               	subwf	i1___lldiv@dividend,f,c
  2848  000F30  5022               	movf	i1___lldiv@divisor+1,w,c
  2849  000F32  5A1E               	subwfb	i1___lldiv@dividend+1,f,c
  2850  000F34  5023               	movf	i1___lldiv@divisor+2,w,c
  2851  000F36  5A1F               	subwfb	i1___lldiv@dividend+2,f,c
  2852  000F38  5024               	movf	i1___lldiv@divisor+3,w,c
  2853  000F3A  5A20               	subwfb	i1___lldiv@dividend+3,f,c
  2854                           
  2855                           ; BSR set to: 0
  2856  000F3C  8160               	bsf	i1___lldiv@quotient& (0+255),0,b
  2857  000F3E                     i1l601:
  2858                           
  2859                           ; BSR set to: 0
  2860                           
  2861                           ; BSR set to: 0
  2862  000F3E  90D8               	bcf	status,0,c
  2863  000F40  3224               	rrcf	i1___lldiv@divisor+3,f,c
  2864  000F42  3223               	rrcf	i1___lldiv@divisor+2,f,c
  2865  000F44  3222               	rrcf	i1___lldiv@divisor+1,f,c
  2866  000F46  3221               	rrcf	i1___lldiv@divisor,f,c
  2867                           
  2868                           ; BSR set to: 0
  2869  000F48  2F64               	decfsz	i1___lldiv@counter& (0+255),f,b
  2870  000F4A  D7E1               	goto	i1u148_20
  2871  000F4C                     i1l602:
  2872                           
  2873                           ; BSR set to: 0
  2874                           
  2875                           ; BSR set to: 0
  2876  000F4C  C060  F01D         	movff	i1___lldiv@quotient,?i1___lldiv
  2877  000F50  C061  F01E         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
  2878  000F54  C062  F01F         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
  2879  000F58  C063  F020         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
  2880                           
  2881                           ; BSR set to: 0
  2882  000F5C  0012               	return		;funcret
  2883  000F5E                     __end_ofi1___lldiv:
  2884                           	opt stack 0
  2885                           pclatu	equ	0xFFB
  2886                           pclath	equ	0xFFA
  2887                           tblptru	equ	0xFF8
  2888                           tblptrh	equ	0xFF7
  2889                           tblptrl	equ	0xFF6
  2890                           tablat	equ	0xFF5
  2891                           prodh	equ	0xFF4
  2892                           prodl	equ	0xFF3
  2893                           intcon	equ	0xFF2
  2894                           intcon2	equ	0xFF1
  2895                           intcon3	equ	0xFF0
  2896                           postinc0	equ	0xFEE
  2897                           fsr0h	equ	0xFEA
  2898                           fsr0l	equ	0xFE9
  2899                           wreg	equ	0xFE8
  2900                           fsr1h	equ	0xFE2
  2901                           fsr1l	equ	0xFE1
  2902                           bsr	equ	0xFE0
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function i1_WriteDataXLCD *****************
  2908 ;; Defined at:
  2909 ;;		line 449 in file "nxlcd.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  data            1    wreg     unsigned char 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  data            1   28[COMRAM] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0
  2924 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2926 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2927 ;;Total ram usage:        1 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    4
  2930 ;; This function calls:
  2931 ;;		i1_DelayFor18TCY
  2932 ;; This function is called by:
  2933 ;;		_HighPriorityISR
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text15
  2938  0012D2                     __ptext15:
  2939                           	opt stack 0
  2940  0012D2                     i1_WriteDataXLCD:
  2941                           	opt stack 22
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;incstack = 0
  2945                           ;i1WriteDataXLCD@data stored from wreg
  2946  0012D2  6E1D               	movwf	i1WriteDataXLCD@data,c
  2947                           
  2948                           ;nxlcd.c: 464: TRISD &= 0x0f;
  2949  0012D4  0E0F               	movlw	15
  2950  0012D6  1695               	andwf	3989,f,c	;volatile
  2951                           
  2952                           ;nxlcd.c: 465: PORTD &= 0x0f;
  2953  0012D8  0E0F               	movlw	15
  2954  0012DA  1683               	andwf	3971,f,c	;volatile
  2955                           
  2956                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  2957  0012DC  501D               	movf	i1WriteDataXLCD@data,w,c
  2958  0012DE  0BF0               	andlw	240
  2959  0012E0  1283               	iorwf	3971,f,c	;volatile
  2960                           
  2961                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  2962  0012E2  808D               	bsf	3981,0,c	;volatile
  2963                           
  2964                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  2965  0012E4  948D               	bcf	3981,2,c	;volatile
  2966                           
  2967                           ;nxlcd.c: 474: DelayFor18TCY();
  2968  0012E6  EC4B  F00A         	call	i1_DelayFor18TCY	;wreg free
  2969                           
  2970                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  2971  0012EA  828D               	bsf	3981,1,c	;volatile
  2972                           
  2973                           ;nxlcd.c: 476: DelayFor18TCY();
  2974  0012EC  EC4B  F00A         	call	i1_DelayFor18TCY	;wreg free
  2975                           
  2976                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  2977  0012F0  928D               	bcf	3981,1,c	;volatile
  2978                           
  2979                           ;nxlcd.c: 479: PORTD &= 0x0f;
  2980  0012F2  0E0F               	movlw	15
  2981  0012F4  1683               	andwf	3971,f,c	;volatile
  2982                           
  2983                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  2984  0012F6  381D               	swapf	i1WriteDataXLCD@data,w,c
  2985  0012F8  0BF0               	andlw	240
  2986  0012FA  0BF0               	andlw	240
  2987  0012FC  1283               	iorwf	3971,f,c	;volatile
  2988                           
  2989                           ;nxlcd.c: 485: DelayFor18TCY();
  2990  0012FE  EC4B  F00A         	call	i1_DelayFor18TCY	;wreg free
  2991                           
  2992                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  2993  001302  828D               	bsf	3981,1,c	;volatile
  2994                           
  2995                           ;nxlcd.c: 487: DelayFor18TCY();
  2996  001304  EC4B  F00A         	call	i1_DelayFor18TCY	;wreg free
  2997                           
  2998                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  2999  001308  928D               	bcf	3981,1,c	;volatile
  3000                           
  3001                           ;nxlcd.c: 490: TRISD |= 0xf0;
  3002  00130A  0EF0               	movlw	240
  3003  00130C  1295               	iorwf	3989,f,c	;volatile
  3004  00130E  0012               	return	
  3005  001310                     __end_ofi1_WriteDataXLCD:
  3006                           	opt stack 0
  3007                           pclatu	equ	0xFFB
  3008                           pclath	equ	0xFFA
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           intcon	equ	0xFF2
  3016                           intcon2	equ	0xFF1
  3017                           intcon3	equ	0xFF0
  3018                           postinc0	equ	0xFEE
  3019                           fsr0h	equ	0xFEA
  3020                           fsr0l	equ	0xFE9
  3021                           wreg	equ	0xFE8
  3022                           fsr1h	equ	0xFE2
  3023                           fsr1l	equ	0xFE1
  3024                           bsr	equ	0xFE0
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function i1_WriteCmdXLCD *****************
  3030 ;; Defined at:
  3031 ;;		line 388 in file "nxlcd.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  cmd             1    wreg     unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  cmd             1   28[COMRAM] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0
  3046 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3048 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    4
  3052 ;; This function calls:
  3053 ;;		i1_DelayFor18TCY
  3054 ;; This function is called by:
  3055 ;;		_HighPriorityISR
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text16
  3060  001310                     __ptext16:
  3061                           	opt stack 0
  3062  001310                     i1_WriteCmdXLCD:
  3063                           	opt stack 22
  3064                           
  3065                           ;incstack = 0
  3066                           ;i1WriteCmdXLCD@cmd stored from wreg
  3067  001310  6E1D               	movwf	i1WriteCmdXLCD@cmd,c
  3068                           
  3069                           ;nxlcd.c: 403: TRISD &= 0x0f;
  3070  001312  0E0F               	movlw	15
  3071  001314  1695               	andwf	3989,f,c	;volatile
  3072                           
  3073                           ;nxlcd.c: 404: PORTD &= 0x0f;
  3074  001316  0E0F               	movlw	15
  3075  001318  1683               	andwf	3971,f,c	;volatile
  3076                           
  3077                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  3078  00131A  501D               	movf	i1WriteCmdXLCD@cmd,w,c
  3079  00131C  0BF0               	andlw	240
  3080  00131E  1283               	iorwf	3971,f,c	;volatile
  3081                           
  3082                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  3083  001320  948D               	bcf	3981,2,c	;volatile
  3084                           
  3085                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  3086  001322  908D               	bcf	3981,0,c	;volatile
  3087                           
  3088                           ;nxlcd.c: 413: DelayFor18TCY();
  3089  001324  EC4B  F00A         	call	i1_DelayFor18TCY	;wreg free
  3090                           
  3091                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  3092  001328  828D               	bsf	3981,1,c	;volatile
  3093                           
  3094                           ;nxlcd.c: 415: DelayFor18TCY();
  3095  00132A  EC4B  F00A         	call	i1_DelayFor18TCY	;wreg free
  3096                           
  3097                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  3098  00132E  928D               	bcf	3981,1,c	;volatile
  3099                           
  3100                           ;nxlcd.c: 418: PORTD &= 0x0f;
  3101  001330  0E0F               	movlw	15
  3102  001332  1683               	andwf	3971,f,c	;volatile
  3103                           
  3104                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  3105  001334  381D               	swapf	i1WriteCmdXLCD@cmd,w,c
  3106  001336  0BF0               	andlw	240
  3107  001338  0BF0               	andlw	240
  3108  00133A  1283               	iorwf	3971,f,c	;volatile
  3109                           
  3110                           ;nxlcd.c: 424: DelayFor18TCY();
  3111  00133C  EC4B  F00A         	call	i1_DelayFor18TCY	;wreg free
  3112                           
  3113                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  3114  001340  828D               	bsf	3981,1,c	;volatile
  3115                           
  3116                           ;nxlcd.c: 426: DelayFor18TCY();
  3117  001342  EC4B  F00A         	call	i1_DelayFor18TCY	;wreg free
  3118                           
  3119                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  3120  001346  928D               	bcf	3981,1,c	;volatile
  3121                           
  3122                           ;nxlcd.c: 429: TRISD |= 0xf0;
  3123  001348  0EF0               	movlw	240
  3124  00134A  1295               	iorwf	3989,f,c	;volatile
  3125  00134C  0012               	return	
  3126  00134E                     __end_ofi1_WriteCmdXLCD:
  3127                           	opt stack 0
  3128                           pclatu	equ	0xFFB
  3129                           pclath	equ	0xFFA
  3130                           tblptru	equ	0xFF8
  3131                           tblptrh	equ	0xFF7
  3132                           tblptrl	equ	0xFF6
  3133                           tablat	equ	0xFF5
  3134                           prodh	equ	0xFF4
  3135                           prodl	equ	0xFF3
  3136                           intcon	equ	0xFF2
  3137                           intcon2	equ	0xFF1
  3138                           intcon3	equ	0xFF0
  3139                           postinc0	equ	0xFEE
  3140                           fsr0h	equ	0xFEA
  3141                           fsr0l	equ	0xFE9
  3142                           wreg	equ	0xFE8
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           bsr	equ	0xFE0
  3146                           fsr2h	equ	0xFDA
  3147                           fsr2l	equ	0xFD9
  3148                           status	equ	0xFD8
  3149                           
  3150 ;; *************** function i1_DelayFor18TCY *****************
  3151 ;; Defined at:
  3152 ;;		line 12 in file "nxlcd.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3169 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3170 ;;Total ram usage:        0 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    3
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		i1_WriteCmdXLCD
  3177 ;;		i1_WriteDataXLCD
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text17
  3182  001496                     __ptext17:
  3183                           	opt stack 0
  3184  001496                     i1_DelayFor18TCY:
  3185                           	opt stack 22
  3186                           
  3187                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  3188                           
  3189                           ;incstack = 0
  3190  001496  0E21               	movlw	33
  3191  001498                     i1u169_27:
  3192  001498  2EE8               	decfsz	wreg,f,c
  3193  00149A  D7FE               	bra	i1u169_27
  3194  00149C  F000               	nop	
  3195  00149E  0012               	return		;funcret
  3196  0014A0                     __end_ofi1_DelayFor18TCY:
  3197                           	opt stack 0
  3198                           pclatu	equ	0xFFB
  3199                           pclath	equ	0xFFA
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           intcon	equ	0xFF2
  3207                           intcon2	equ	0xFF1
  3208                           intcon3	equ	0xFF0
  3209                           postinc0	equ	0xFEE
  3210                           fsr0h	equ	0xFEA
  3211                           fsr0l	equ	0xFE9
  3212                           wreg	equ	0xFE8
  3213                           fsr1h	equ	0xFE2
  3214                           fsr1l	equ	0xFE1
  3215                           bsr	equ	0xFE0
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function ___llmod *****************
  3221 ;; Defined at:
  3222 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  dividend        4   28[COMRAM] unsigned long 
  3225 ;;  divisor         4   32[COMRAM] unsigned long 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  counter         1   36[COMRAM] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  4   28[COMRAM] unsigned long 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3237 ;;      Params:         8       0       0       0       0       0       0       0       0
  3238 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3240 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3241 ;;Total ram usage:        9 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    3
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_HighPriorityISR
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text18
  3252  001146                     __ptext18:
  3253                           	opt stack 0
  3254  001146                     ___llmod:
  3255                           	opt stack 23
  3256                           
  3257                           ;incstack = 0
  3258  001146  5021               	movf	___llmod@divisor,w,c
  3259  001148  1022               	iorwf	___llmod@divisor+1,w,c
  3260  00114A  1023               	iorwf	___llmod@divisor+2,w,c
  3261  00114C  1024               	iorwf	___llmod@divisor+3,w,c
  3262  00114E  B4D8               	btfsc	status,2,c
  3263  001150  D024               	goto	i1l612
  3264  001152  0E01               	movlw	1
  3265  001154  6E25               	movwf	___llmod@counter,c
  3266  001156  D006               	goto	i1l607
  3267  001158  90D8               	bcf	status,0,c
  3268  00115A  3621               	rlcf	___llmod@divisor,f,c
  3269  00115C  3622               	rlcf	___llmod@divisor+1,f,c
  3270  00115E  3623               	rlcf	___llmod@divisor+2,f,c
  3271  001160  3624               	rlcf	___llmod@divisor+3,f,c
  3272  001162  2A25               	incf	___llmod@counter,f,c
  3273  001164                     i1l607:
  3274  001164  AE24               	btfss	___llmod@divisor+3,7,c
  3275  001166  D7F8               	goto	i1l608
  3276  001168                     i1u105_20:
  3277  001168  5021               	movf	___llmod@divisor,w,c
  3278  00116A  5C1D               	subwf	___llmod@dividend,w,c
  3279  00116C  5022               	movf	___llmod@divisor+1,w,c
  3280  00116E  581E               	subwfb	___llmod@dividend+1,w,c
  3281  001170  5023               	movf	___llmod@divisor+2,w,c
  3282  001172  581F               	subwfb	___llmod@dividend+2,w,c
  3283  001174  5024               	movf	___llmod@divisor+3,w,c
  3284  001176  5820               	subwfb	___llmod@dividend+3,w,c
  3285  001178  A0D8               	btfss	status,0,c
  3286  00117A  D008               	goto	i1l611
  3287  00117C  5021               	movf	___llmod@divisor,w,c
  3288  00117E  5E1D               	subwf	___llmod@dividend,f,c
  3289  001180  5022               	movf	___llmod@divisor+1,w,c
  3290  001182  5A1E               	subwfb	___llmod@dividend+1,f,c
  3291  001184  5023               	movf	___llmod@divisor+2,w,c
  3292  001186  5A1F               	subwfb	___llmod@dividend+2,f,c
  3293  001188  5024               	movf	___llmod@divisor+3,w,c
  3294  00118A  5A20               	subwfb	___llmod@dividend+3,f,c
  3295  00118C                     i1l611:
  3296  00118C  90D8               	bcf	status,0,c
  3297  00118E  3224               	rrcf	___llmod@divisor+3,f,c
  3298  001190  3223               	rrcf	___llmod@divisor+2,f,c
  3299  001192  3222               	rrcf	___llmod@divisor+1,f,c
  3300  001194  3221               	rrcf	___llmod@divisor,f,c
  3301  001196  2E25               	decfsz	___llmod@counter,f,c
  3302  001198  D7E7               	goto	i1u105_20
  3303  00119A                     i1l612:
  3304  00119A  C01D  F01D         	movff	___llmod@dividend,?___llmod
  3305  00119E  C01E  F01E         	movff	___llmod@dividend+1,?___llmod+1
  3306  0011A2  C01F  F01F         	movff	___llmod@dividend+2,?___llmod+2
  3307  0011A6  C020  F020         	movff	___llmod@dividend+3,?___llmod+3
  3308  0011AA  0012               	return		;funcret
  3309  0011AC                     __end_of___llmod:
  3310                           	opt stack 0
  3311                           pclatu	equ	0xFFB
  3312                           pclath	equ	0xFFA
  3313                           tblptru	equ	0xFF8
  3314                           tblptrh	equ	0xFF7
  3315                           tblptrl	equ	0xFF6
  3316                           tablat	equ	0xFF5
  3317                           prodh	equ	0xFF4
  3318                           prodl	equ	0xFF3
  3319                           intcon	equ	0xFF2
  3320                           intcon2	equ	0xFF1
  3321                           intcon3	equ	0xFF0
  3322                           postinc0	equ	0xFEE
  3323                           fsr0h	equ	0xFEA
  3324                           fsr0l	equ	0xFE9
  3325                           wreg	equ	0xFE8
  3326                           fsr1h	equ	0xFE2
  3327                           fsr1l	equ	0xFE1
  3328                           bsr	equ	0xFE0
  3329                           fsr2h	equ	0xFDA
  3330                           fsr2l	equ	0xFD9
  3331                           status	equ	0xFD8
  3332                           
  3333 ;; *************** function ___awmod *****************
  3334 ;; Defined at:
  3335 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  dividend        2   28[COMRAM] int 
  3338 ;;  divisor         2   30[COMRAM] int 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  sign            1   33[COMRAM] unsigned char 
  3341 ;;  counter         1   32[COMRAM] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  2   28[COMRAM] int 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3351 ;;      Params:         4       0       0       0       0       0       0       0       0
  3352 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3354 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3355 ;;Total ram usage:        6 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    3
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_HighPriorityISR
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text19
  3366  001066                     __ptext19:
  3367                           	opt stack 0
  3368  001066                     ___awmod:
  3369                           	opt stack 23
  3370                           
  3371                           ;incstack = 0
  3372  001066  0E00               	movlw	0
  3373  001068  6E22               	movwf	___awmod@sign,c
  3374  00106A  AE1E               	btfss	___awmod@dividend+1,7,c
  3375  00106C  D006               	goto	i1l427
  3376  00106E  6C1D               	negf	___awmod@dividend,c
  3377  001070  1E1E               	comf	___awmod@dividend+1,f,c
  3378  001072  B0D8               	btfsc	status,0,c
  3379  001074  2A1E               	incf	___awmod@dividend+1,f,c
  3380  001076  0E01               	movlw	1
  3381  001078  6E22               	movwf	___awmod@sign,c
  3382  00107A                     i1l427:
  3383  00107A  AE20               	btfss	___awmod@divisor+1,7,c
  3384  00107C  D004               	goto	i1l428
  3385  00107E  6C1F               	negf	___awmod@divisor,c
  3386  001080  1E20               	comf	___awmod@divisor+1,f,c
  3387  001082  B0D8               	btfsc	status,0,c
  3388  001084  2A20               	incf	___awmod@divisor+1,f,c
  3389  001086                     i1l428:
  3390  001086  501F               	movf	___awmod@divisor,w,c
  3391  001088  1020               	iorwf	___awmod@divisor+1,w,c
  3392  00108A  B4D8               	btfsc	status,2,c
  3393  00108C  D018               	goto	i1l435
  3394  00108E  0E01               	movlw	1
  3395  001090  6E21               	movwf	___awmod@counter,c
  3396  001092  D004               	goto	i1l430
  3397  001094  90D8               	bcf	status,0,c
  3398  001096  361F               	rlcf	___awmod@divisor,f,c
  3399  001098  3620               	rlcf	___awmod@divisor+1,f,c
  3400  00109A  2A21               	incf	___awmod@counter,f,c
  3401  00109C                     i1l430:
  3402  00109C  AE20               	btfss	___awmod@divisor+1,7,c
  3403  00109E  D7FA               	goto	i1l431
  3404  0010A0                     i1u101_20:
  3405  0010A0  501F               	movf	___awmod@divisor,w,c
  3406  0010A2  5C1D               	subwf	___awmod@dividend,w,c
  3407  0010A4  5020               	movf	___awmod@divisor+1,w,c
  3408  0010A6  581E               	subwfb	___awmod@dividend+1,w,c
  3409  0010A8  A0D8               	btfss	status,0,c
  3410  0010AA  D004               	goto	i1l434
  3411  0010AC  501F               	movf	___awmod@divisor,w,c
  3412  0010AE  5E1D               	subwf	___awmod@dividend,f,c
  3413  0010B0  5020               	movf	___awmod@divisor+1,w,c
  3414  0010B2  5A1E               	subwfb	___awmod@dividend+1,f,c
  3415  0010B4                     i1l434:
  3416  0010B4  90D8               	bcf	status,0,c
  3417  0010B6  3220               	rrcf	___awmod@divisor+1,f,c
  3418  0010B8  321F               	rrcf	___awmod@divisor,f,c
  3419  0010BA  2E21               	decfsz	___awmod@counter,f,c
  3420  0010BC  D7F1               	goto	i1u101_20
  3421  0010BE                     i1l435:
  3422  0010BE  5022               	movf	___awmod@sign,w,c
  3423  0010C0  B4D8               	btfsc	status,2,c
  3424  0010C2  D004               	goto	i1l436
  3425  0010C4  6C1D               	negf	___awmod@dividend,c
  3426  0010C6  1E1E               	comf	___awmod@dividend+1,f,c
  3427  0010C8  B0D8               	btfsc	status,0,c
  3428  0010CA  2A1E               	incf	___awmod@dividend+1,f,c
  3429  0010CC                     i1l436:
  3430  0010CC  C01D  F01D         	movff	___awmod@dividend,?___awmod
  3431  0010D0  C01E  F01E         	movff	___awmod@dividend+1,?___awmod+1
  3432  0010D4  0012               	return	
  3433  0010D6                     __end_of___awmod:
  3434                           	opt stack 0
  3435                           pclatu	equ	0xFFB
  3436                           pclath	equ	0xFFA
  3437                           tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           intcon	equ	0xFF2
  3444                           intcon2	equ	0xFF1
  3445                           intcon3	equ	0xFF0
  3446                           postinc0	equ	0xFEE
  3447                           fsr0h	equ	0xFEA
  3448                           fsr0l	equ	0xFE9
  3449                           wreg	equ	0xFE8
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           bsr	equ	0xFE0
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function ___awdiv *****************
  3458 ;; Defined at:
  3459 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  dividend        2   28[COMRAM] int 
  3462 ;;  divisor         2   30[COMRAM] int 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  quotient        2   34[COMRAM] int 
  3465 ;;  sign            1   33[COMRAM] unsigned char 
  3466 ;;  counter         1   32[COMRAM] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  2   28[COMRAM] int 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3476 ;;      Params:         4       0       0       0       0       0       0       0       0
  3477 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3479 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3480 ;;Total ram usage:        8 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    3
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_HighPriorityISR
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text20
  3491  000F5E                     __ptext20:
  3492                           	opt stack 0
  3493  000F5E                     ___awdiv:
  3494                           	opt stack 23
  3495                           
  3496                           ;incstack = 0
  3497  000F5E  0E00               	movlw	0
  3498  000F60  6E22               	movwf	___awdiv@sign,c
  3499  000F62  AE20               	btfss	___awdiv@divisor+1,7,c
  3500  000F64  D006               	goto	i1l414
  3501  000F66  6C1F               	negf	___awdiv@divisor,c
  3502  000F68  1E20               	comf	___awdiv@divisor+1,f,c
  3503  000F6A  B0D8               	btfsc	status,0,c
  3504  000F6C  2A20               	incf	___awdiv@divisor+1,f,c
  3505  000F6E  0E01               	movlw	1
  3506  000F70  6E22               	movwf	___awdiv@sign,c
  3507  000F72                     i1l414:
  3508  000F72  AE1E               	btfss	___awdiv@dividend+1,7,c
  3509  000F74  D006               	goto	i1l415
  3510  000F76  6C1D               	negf	___awdiv@dividend,c
  3511  000F78  1E1E               	comf	___awdiv@dividend+1,f,c
  3512  000F7A  B0D8               	btfsc	status,0,c
  3513  000F7C  2A1E               	incf	___awdiv@dividend+1,f,c
  3514  000F7E  0E01               	movlw	1
  3515  000F80  1A22               	xorwf	___awdiv@sign,f,c
  3516  000F82                     i1l415:
  3517  000F82  0E00               	movlw	0
  3518  000F84  6E24               	movwf	___awdiv@quotient+1,c
  3519  000F86  0E00               	movlw	0
  3520  000F88  6E23               	movwf	___awdiv@quotient,c
  3521  000F8A  501F               	movf	___awdiv@divisor,w,c
  3522  000F8C  1020               	iorwf	___awdiv@divisor+1,w,c
  3523  000F8E  B4D8               	btfsc	status,2,c
  3524  000F90  D01C               	goto	i1l422
  3525  000F92  0E01               	movlw	1
  3526  000F94  6E21               	movwf	___awdiv@counter,c
  3527  000F96  D004               	goto	i1l417
  3528  000F98  90D8               	bcf	status,0,c
  3529  000F9A  361F               	rlcf	___awdiv@divisor,f,c
  3530  000F9C  3620               	rlcf	___awdiv@divisor+1,f,c
  3531  000F9E  2A21               	incf	___awdiv@counter,f,c
  3532  000FA0                     i1l417:
  3533  000FA0  AE20               	btfss	___awdiv@divisor+1,7,c
  3534  000FA2  D7FA               	goto	i1l418
  3535  000FA4                     i1u95_20:
  3536  000FA4  90D8               	bcf	status,0,c
  3537  000FA6  3623               	rlcf	___awdiv@quotient,f,c
  3538  000FA8  3624               	rlcf	___awdiv@quotient+1,f,c
  3539  000FAA  501F               	movf	___awdiv@divisor,w,c
  3540  000FAC  5C1D               	subwf	___awdiv@dividend,w,c
  3541  000FAE  5020               	movf	___awdiv@divisor+1,w,c
  3542  000FB0  581E               	subwfb	___awdiv@dividend+1,w,c
  3543  000FB2  A0D8               	btfss	status,0,c
  3544  000FB4  D005               	goto	i1l421
  3545  000FB6  501F               	movf	___awdiv@divisor,w,c
  3546  000FB8  5E1D               	subwf	___awdiv@dividend,f,c
  3547  000FBA  5020               	movf	___awdiv@divisor+1,w,c
  3548  000FBC  5A1E               	subwfb	___awdiv@dividend+1,f,c
  3549  000FBE  8023               	bsf	___awdiv@quotient,0,c
  3550  000FC0                     i1l421:
  3551  000FC0  90D8               	bcf	status,0,c
  3552  000FC2  3220               	rrcf	___awdiv@divisor+1,f,c
  3553  000FC4  321F               	rrcf	___awdiv@divisor,f,c
  3554  000FC6  2E21               	decfsz	___awdiv@counter,f,c
  3555  000FC8  D7ED               	goto	i1u95_20
  3556  000FCA                     i1l422:
  3557  000FCA  5022               	movf	___awdiv@sign,w,c
  3558  000FCC  B4D8               	btfsc	status,2,c
  3559  000FCE  D004               	goto	i1l423
  3560  000FD0  6C23               	negf	___awdiv@quotient,c
  3561  000FD2  1E24               	comf	___awdiv@quotient+1,f,c
  3562  000FD4  B0D8               	btfsc	status,0,c
  3563  000FD6  2A24               	incf	___awdiv@quotient+1,f,c
  3564  000FD8                     i1l423:
  3565  000FD8  C023  F01D         	movff	___awdiv@quotient,?___awdiv
  3566  000FDC  C024  F01E         	movff	___awdiv@quotient+1,?___awdiv+1
  3567  000FE0  0012               	return	
  3568  000FE2                     __end_of___awdiv:
  3569                           	opt stack 0
  3570                           pclatu	equ	0xFFB
  3571                           pclath	equ	0xFFA
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           prodh	equ	0xFF4
  3577                           prodl	equ	0xFF3
  3578                           intcon	equ	0xFF2
  3579                           intcon2	equ	0xFF1
  3580                           intcon3	equ	0xFF0
  3581                           postinc0	equ	0xFEE
  3582                           fsr0h	equ	0xFEA
  3583                           fsr0l	equ	0xFE9
  3584                           wreg	equ	0xFE8
  3585                           fsr1h	equ	0xFE2
  3586                           fsr1l	equ	0xFE1
  3587                           bsr	equ	0xFE0
  3588                           fsr2h	equ	0xFDA
  3589                           fsr2l	equ	0xFD9
  3590                           status	equ	0xFD8
  3591                           
  3592 ;; *************** function _LowPriorityISR *****************
  3593 ;; Defined at:
  3594 ;;		line 131 in file "main.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3610 ;;      Temps:         20       0       0       0       0       0       0       0       0
  3611 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3612 ;;Total ram usage:       20 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    2
  3615 ;; This function calls:
  3616 ;;		i2_WriteCmdXLCD
  3617 ;;		i2_WriteDataXLCD
  3618 ;;		i2___awdiv
  3619 ;;		i2___awmod
  3620 ;; This function is called by:
  3621 ;;		Interrupt level 2
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	intcode
  3626  000008                     __pintcode:
  3627                           	opt stack 0
  3628  000008                     _LowPriorityISR:
  3629                           	opt stack 22
  3630                           
  3631                           ;incstack = 0
  3632  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3633  00000A  ED4C  F005         	call	int_func,f	;refresh shadow registers
  3634                           pclatu	equ	0xFFB
  3635                           pclath	equ	0xFFA
  3636                           tblptru	equ	0xFF8
  3637                           tblptrh	equ	0xFF7
  3638                           tblptrl	equ	0xFF6
  3639                           tablat	equ	0xFF5
  3640                           prodh	equ	0xFF4
  3641                           prodl	equ	0xFF3
  3642                           intcon	equ	0xFF2
  3643                           intcon2	equ	0xFF1
  3644                           intcon3	equ	0xFF0
  3645                           postinc0	equ	0xFEE
  3646                           fsr0h	equ	0xFEA
  3647                           fsr0l	equ	0xFE9
  3648                           wreg	equ	0xFE8
  3649                           fsr1h	equ	0xFE2
  3650                           fsr1l	equ	0xFE1
  3651                           bsr	equ	0xFE0
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656                           	psect	intcode_body
  3657  000A98                     __pintcode_body:
  3658                           	opt stack 22
  3659  000A98                     int_func:
  3660                           	opt stack 22
  3661  000A98  0006               	pop		; remove dummy address from shadow register refresh
  3662  000A9A  CFFA F00B          	movff	pclath,??_LowPriorityISR+2
  3663  000A9E  CFFB F00C          	movff	pclatu,??_LowPriorityISR+3
  3664  000AA2  CFE9 F00D          	movff	fsr0l,??_LowPriorityISR+4
  3665  000AA6  CFEA F00E          	movff	fsr0h,??_LowPriorityISR+5
  3666  000AAA  CFE1 F00F          	movff	fsr1l,??_LowPriorityISR+6
  3667  000AAE  CFE2 F010          	movff	fsr1h,??_LowPriorityISR+7
  3668  000AB2  CFD9 F011          	movff	fsr2l,??_LowPriorityISR+8
  3669  000AB6  CFDA F012          	movff	fsr2h,??_LowPriorityISR+9
  3670  000ABA  CFF3 F013          	movff	prodl,??_LowPriorityISR+10
  3671  000ABE  CFF4 F014          	movff	prodh,??_LowPriorityISR+11
  3672  000AC2  CFF6 F015          	movff	tblptrl,??_LowPriorityISR+12
  3673  000AC6  CFF7 F016          	movff	tblptrh,??_LowPriorityISR+13
  3674  000ACA  CFF8 F017          	movff	tblptru,??_LowPriorityISR+14
  3675  000ACE  CFF5 F018          	movff	tablat,??_LowPriorityISR+15
  3676  000AD2  C043  F019         	movff	btemp,??_LowPriorityISR+16
  3677  000AD6  C044  F01A         	movff	btemp+1,??_LowPriorityISR+17
  3678  000ADA  C045  F01B         	movff	btemp+2,??_LowPriorityISR+18
  3679  000ADE  C046  F01C         	movff	btemp+3,??_LowPriorityISR+19
  3680                           
  3681                           ;main.c: 132: if (INTCON3bits.INT1IF && (tempDesejada < 65)) {
  3682  000AE2  A0F0               	btfss	intcon3,0,c	;volatile
  3683  000AE4  D040               	goto	i2l138
  3684  000AE6  0E41               	movlw	65
  3685  000AE8  6042               	cpfslt	_tempDesejada,c
  3686  000AEA  D03D               	goto	i2l138
  3687                           
  3688                           ;main.c: 133: _delay((unsigned long)((150)*(20000000/4000.0)));
  3689  000AEC  0E04               	movlw	4
  3690  000AEE  6E0A               	movwf	(??_LowPriorityISR+1)& (0+255),c
  3691  000AF0  0ECF               	movlw	207
  3692  000AF2  6E09               	movwf	??_LowPriorityISR& (0+255),c
  3693  000AF4  0E02               	movlw	2
  3694  000AF6                     i2u170_47:
  3695  000AF6  2EE8               	decfsz	wreg,f,c
  3696  000AF8  D7FE               	bra	i2u170_47
  3697  000AFA  2E09               	decfsz	??_LowPriorityISR& (0+255),f,c
  3698  000AFC  D7FC               	bra	i2u170_47
  3699  000AFE  2E0A               	decfsz	(??_LowPriorityISR+1)& (0+255),f,c
  3700  000B00  D7FA               	bra	i2u170_47
  3701                           
  3702                           ;main.c: 134: tempDesejada++;
  3703  000B02  2A42               	incf	_tempDesejada,f,c
  3704                           
  3705                           ;main.c: 137: WriteCmdXLCD(0x8B);
  3706  000B04  0E8B               	movlw	139
  3707  000B06  ECC6  F009         	call	i2_WriteCmdXLCD
  3708                           
  3709                           ;main.c: 138: dezenaDes = tempDesejada / 10;
  3710  000B0A  C042  F001         	movff	_tempDesejada,i2___awdiv@dividend
  3711  000B0E  6A02               	clrf	i2___awdiv@dividend+1,c
  3712  000B10  0E00               	movlw	0
  3713  000B12  6E04               	movwf	i2___awdiv@divisor+1,c
  3714  000B14  0E0A               	movlw	10
  3715  000B16  6E03               	movwf	i2___awdiv@divisor,c
  3716  000B18  ECF1  F007         	call	i2___awdiv	;wreg free
  3717  000B1C  C001  F02A         	movff	?i2___awdiv,_dezenaDes
  3718  000B20  C002  F02B         	movff	?i2___awdiv+1,_dezenaDes+1
  3719  000B24  0E00               	movlw	0
  3720  000B26  BE2B               	btfsc	_dezenaDes+1,7,c
  3721  000B28  0EFF               	movlw	-1
  3722  000B2A  6E2C               	movwf	_dezenaDes+2,c
  3723  000B2C  6E2D               	movwf	_dezenaDes+3,c
  3724                           
  3725                           ;main.c: 139: unidadeDes = tempDesejada % 10;
  3726  000B2E  C042  F001         	movff	_tempDesejada,i2___awmod@dividend
  3727  000B32  6A02               	clrf	i2___awmod@dividend+1,c
  3728  000B34  0E00               	movlw	0
  3729  000B36  6E04               	movwf	i2___awmod@divisor+1,c
  3730  000B38  0E0A               	movlw	10
  3731  000B3A  6E03               	movwf	i2___awmod@divisor,c
  3732  000B3C  EC6B  F008         	call	i2___awmod	;wreg free
  3733  000B40  C001  F026         	movff	?i2___awmod,_unidadeDes
  3734  000B44  C002  F027         	movff	?i2___awmod+1,_unidadeDes+1
  3735  000B48  0E00               	movlw	0
  3736  000B4A  BE27               	btfsc	_unidadeDes+1,7,c
  3737  000B4C  0EFF               	movlw	-1
  3738  000B4E  6E28               	movwf	_unidadeDes+2,c
  3739  000B50  6E29               	movwf	_unidadeDes+3,c
  3740                           
  3741                           ;main.c: 140: WriteDataXLCD(0x30 + dezenaDes);
  3742  000B52  502A               	movf	_dezenaDes,w,c
  3743  000B54  0F30               	addlw	48
  3744  000B56  ECA7  F009         	call	i2_WriteDataXLCD
  3745                           
  3746                           ;main.c: 141: WriteDataXLCD(0x30 + unidadeDes);
  3747  000B5A  5026               	movf	_unidadeDes,w,c
  3748  000B5C  0F30               	addlw	48
  3749  000B5E  ECA7  F009         	call	i2_WriteDataXLCD
  3750                           
  3751                           ;main.c: 143: INTCON3bits.INT1IF = 0;
  3752  000B62  90F0               	bcf	intcon3,0,c	;volatile
  3753                           
  3754                           ;main.c: 144: }
  3755  000B64  D044               	goto	i2l140
  3756  000B66                     i2l138:
  3757                           
  3758                           ;main.c: 146: else if (INTCON3bits.INT2IF && (tempDesejada > tempMin)) {
  3759  000B66  A2F0               	btfss	intcon3,1,c	;volatile
  3760  000B68  D042               	goto	i2l140
  3761  000B6A  5042               	movf	_tempDesejada,w,c
  3762  000B6C  0100               	movlb	0	; () banked
  3763  000B6E  5DA9               	subwf	_tempMin& (0+255),w,b
  3764  000B70  B0D8               	btfsc	status,0,c
  3765  000B72  D03D               	goto	i2l140
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;main.c: 147: _delay((unsigned long)((150)*(20000000/4000.0)));
  3769  000B74  0E04               	movlw	4
  3770  000B76  6E0A               	movwf	(??_LowPriorityISR+1)& (0+255),c
  3771  000B78  0ECF               	movlw	207
  3772  000B7A  6E09               	movwf	??_LowPriorityISR& (0+255),c
  3773  000B7C  0E02               	movlw	2
  3774  000B7E                     i2u171_47:
  3775  000B7E  2EE8               	decfsz	wreg,f,c
  3776  000B80  D7FE               	bra	i2u171_47
  3777  000B82  2E09               	decfsz	??_LowPriorityISR& (0+255),f,c
  3778  000B84  D7FC               	bra	i2u171_47
  3779  000B86  2E0A               	decfsz	(??_LowPriorityISR+1)& (0+255),f,c
  3780  000B88  D7FA               	bra	i2u171_47
  3781                           
  3782                           ;main.c: 148: tempDesejada = tempDesejada - 1;
  3783  000B8A  0442               	decf	_tempDesejada,w,c
  3784  000B8C  6E42               	movwf	_tempDesejada,c
  3785                           
  3786                           ;main.c: 151: WriteCmdXLCD(0x8B);
  3787  000B8E  0E8B               	movlw	139
  3788  000B90  ECC6  F009         	call	i2_WriteCmdXLCD
  3789                           
  3790                           ;main.c: 152: dezenaDes = tempDesejada / 10;
  3791  000B94  C042  F001         	movff	_tempDesejada,i2___awdiv@dividend
  3792  000B98  6A02               	clrf	i2___awdiv@dividend+1,c
  3793  000B9A  0E00               	movlw	0
  3794  000B9C  6E04               	movwf	i2___awdiv@divisor+1,c
  3795  000B9E  0E0A               	movlw	10
  3796  000BA0  6E03               	movwf	i2___awdiv@divisor,c
  3797  000BA2  ECF1  F007         	call	i2___awdiv	;wreg free
  3798  000BA6  C001  F02A         	movff	?i2___awdiv,_dezenaDes
  3799  000BAA  C002  F02B         	movff	?i2___awdiv+1,_dezenaDes+1
  3800  000BAE  0E00               	movlw	0
  3801  000BB0  BE2B               	btfsc	_dezenaDes+1,7,c
  3802  000BB2  0EFF               	movlw	-1
  3803  000BB4  6E2C               	movwf	_dezenaDes+2,c
  3804  000BB6  6E2D               	movwf	_dezenaDes+3,c
  3805                           
  3806                           ;main.c: 153: unidadeDes = tempDesejada % 10;
  3807  000BB8  C042  F001         	movff	_tempDesejada,i2___awmod@dividend
  3808  000BBC  6A02               	clrf	i2___awmod@dividend+1,c
  3809  000BBE  0E00               	movlw	0
  3810  000BC0  6E04               	movwf	i2___awmod@divisor+1,c
  3811  000BC2  0E0A               	movlw	10
  3812  000BC4  6E03               	movwf	i2___awmod@divisor,c
  3813  000BC6  EC6B  F008         	call	i2___awmod	;wreg free
  3814  000BCA  C001  F026         	movff	?i2___awmod,_unidadeDes
  3815  000BCE  C002  F027         	movff	?i2___awmod+1,_unidadeDes+1
  3816  000BD2  0E00               	movlw	0
  3817  000BD4  BE27               	btfsc	_unidadeDes+1,7,c
  3818  000BD6  0EFF               	movlw	-1
  3819  000BD8  6E28               	movwf	_unidadeDes+2,c
  3820  000BDA  6E29               	movwf	_unidadeDes+3,c
  3821                           
  3822                           ;main.c: 154: WriteDataXLCD(0x30 + dezenaDes);
  3823  000BDC  502A               	movf	_dezenaDes,w,c
  3824  000BDE  0F30               	addlw	48
  3825  000BE0  ECA7  F009         	call	i2_WriteDataXLCD
  3826                           
  3827                           ;main.c: 155: WriteDataXLCD(0x30 + unidadeDes);
  3828  000BE4  5026               	movf	_unidadeDes,w,c
  3829  000BE6  0F30               	addlw	48
  3830  000BE8  ECA7  F009         	call	i2_WriteDataXLCD
  3831                           
  3832                           ;main.c: 157: INTCON3bits.INT2IF = 0;
  3833  000BEC  92F0               	bcf	intcon3,1,c	;volatile
  3834  000BEE                     i2l140:
  3835  000BEE  C01C  F046         	movff	??_LowPriorityISR+19,btemp+3
  3836  000BF2  C01B  F045         	movff	??_LowPriorityISR+18,btemp+2
  3837  000BF6  C01A  F044         	movff	??_LowPriorityISR+17,btemp+1
  3838  000BFA  C019  F043         	movff	??_LowPriorityISR+16,btemp
  3839  000BFE  C018  FFF5         	movff	??_LowPriorityISR+15,tablat
  3840  000C02  C017  FFF8         	movff	??_LowPriorityISR+14,tblptru
  3841  000C06  C016  FFF7         	movff	??_LowPriorityISR+13,tblptrh
  3842  000C0A  C015  FFF6         	movff	??_LowPriorityISR+12,tblptrl
  3843  000C0E  C014  FFF4         	movff	??_LowPriorityISR+11,prodh
  3844  000C12  C013  FFF3         	movff	??_LowPriorityISR+10,prodl
  3845  000C16  C012  FFDA         	movff	??_LowPriorityISR+9,fsr2h
  3846  000C1A  C011  FFD9         	movff	??_LowPriorityISR+8,fsr2l
  3847  000C1E  C010  FFE2         	movff	??_LowPriorityISR+7,fsr1h
  3848  000C22  C00F  FFE1         	movff	??_LowPriorityISR+6,fsr1l
  3849  000C26  C00E  FFEA         	movff	??_LowPriorityISR+5,fsr0h
  3850  000C2A  C00D  FFE9         	movff	??_LowPriorityISR+4,fsr0l
  3851  000C2E  C00C  FFFB         	movff	??_LowPriorityISR+3,pclatu
  3852  000C32  C00B  FFFA         	movff	??_LowPriorityISR+2,pclath
  3853  000C36  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3854  000C38  0011               	retfie		f
  3855  000C3A                     __end_of_LowPriorityISR:
  3856                           	opt stack 0
  3857                           pclatu	equ	0xFFB
  3858                           pclath	equ	0xFFA
  3859                           tblptru	equ	0xFF8
  3860                           tblptrh	equ	0xFF7
  3861                           tblptrl	equ	0xFF6
  3862                           tablat	equ	0xFF5
  3863                           prodh	equ	0xFF4
  3864                           prodl	equ	0xFF3
  3865                           intcon	equ	0xFF2
  3866                           intcon2	equ	0xFF1
  3867                           intcon3	equ	0xFF0
  3868                           postinc0	equ	0xFEE
  3869                           fsr0h	equ	0xFEA
  3870                           fsr0l	equ	0xFE9
  3871                           wreg	equ	0xFE8
  3872                           fsr1h	equ	0xFE2
  3873                           fsr1l	equ	0xFE1
  3874                           bsr	equ	0xFE0
  3875                           fsr2h	equ	0xFDA
  3876                           fsr2l	equ	0xFD9
  3877                           status	equ	0xFD8
  3878                           
  3879 ;; *************** function i2___awmod *****************
  3880 ;; Defined at:
  3881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  dividend        2    0[COMRAM] int 
  3884 ;;  divisor         2    2[COMRAM] int 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  __awmod         1    5[COMRAM] unsigned char 
  3887 ;;  __awmod         1    4[COMRAM] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2    0[COMRAM] int 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3897 ;;      Params:         4       0       0       0       0       0       0       0       0
  3898 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3900 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3901 ;;Total ram usage:        6 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_LowPriorityISR
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text22
  3911  0010D6                     __ptext22:
  3912                           	opt stack 0
  3913  0010D6                     i2___awmod:
  3914                           	opt stack 23
  3915                           
  3916                           ;incstack = 0
  3917  0010D6  0E00               	movlw	0
  3918  0010D8  6E06               	movwf	i2___awmod@sign,c
  3919  0010DA  AE02               	btfss	i2___awmod@dividend+1,7,c
  3920  0010DC  D006               	goto	i2l427
  3921  0010DE  6C01               	negf	i2___awmod@dividend,c
  3922  0010E0  1E02               	comf	i2___awmod@dividend+1,f,c
  3923  0010E2  B0D8               	btfsc	status,0,c
  3924  0010E4  2A02               	incf	i2___awmod@dividend+1,f,c
  3925  0010E6  0E01               	movlw	1
  3926  0010E8  6E06               	movwf	i2___awmod@sign,c
  3927  0010EA                     i2l427:
  3928  0010EA  AE04               	btfss	i2___awmod@divisor+1,7,c
  3929  0010EC  D004               	goto	i2l428
  3930  0010EE  6C03               	negf	i2___awmod@divisor,c
  3931  0010F0  1E04               	comf	i2___awmod@divisor+1,f,c
  3932  0010F2  B0D8               	btfsc	status,0,c
  3933  0010F4  2A04               	incf	i2___awmod@divisor+1,f,c
  3934  0010F6                     i2l428:
  3935  0010F6  5003               	movf	i2___awmod@divisor,w,c
  3936  0010F8  1004               	iorwf	i2___awmod@divisor+1,w,c
  3937  0010FA  B4D8               	btfsc	status,2,c
  3938  0010FC  D018               	goto	i2l435
  3939  0010FE  0E01               	movlw	1
  3940  001100  6E05               	movwf	i2___awmod@counter,c
  3941  001102  D004               	goto	i2l430
  3942  001104  90D8               	bcf	status,0,c
  3943  001106  3603               	rlcf	i2___awmod@divisor,f,c
  3944  001108  3604               	rlcf	i2___awmod@divisor+1,f,c
  3945  00110A  2A05               	incf	i2___awmod@counter,f,c
  3946  00110C                     i2l430:
  3947  00110C  AE04               	btfss	i2___awmod@divisor+1,7,c
  3948  00110E  D7FA               	goto	i2l431
  3949  001110                     i2u116_40:
  3950  001110  5003               	movf	i2___awmod@divisor,w,c
  3951  001112  5C01               	subwf	i2___awmod@dividend,w,c
  3952  001114  5004               	movf	i2___awmod@divisor+1,w,c
  3953  001116  5802               	subwfb	i2___awmod@dividend+1,w,c
  3954  001118  A0D8               	btfss	status,0,c
  3955  00111A  D004               	goto	i2l434
  3956  00111C  5003               	movf	i2___awmod@divisor,w,c
  3957  00111E  5E01               	subwf	i2___awmod@dividend,f,c
  3958  001120  5004               	movf	i2___awmod@divisor+1,w,c
  3959  001122  5A02               	subwfb	i2___awmod@dividend+1,f,c
  3960  001124                     i2l434:
  3961  001124  90D8               	bcf	status,0,c
  3962  001126  3204               	rrcf	i2___awmod@divisor+1,f,c
  3963  001128  3203               	rrcf	i2___awmod@divisor,f,c
  3964  00112A  2E05               	decfsz	i2___awmod@counter,f,c
  3965  00112C  D7F1               	goto	i2u116_40
  3966  00112E                     i2l435:
  3967  00112E  5006               	movf	i2___awmod@sign,w,c
  3968  001130  B4D8               	btfsc	status,2,c
  3969  001132  D004               	goto	i2l436
  3970  001134  6C01               	negf	i2___awmod@dividend,c
  3971  001136  1E02               	comf	i2___awmod@dividend+1,f,c
  3972  001138  B0D8               	btfsc	status,0,c
  3973  00113A  2A02               	incf	i2___awmod@dividend+1,f,c
  3974  00113C                     i2l436:
  3975  00113C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  3976  001140  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3977  001144  0012               	return	
  3978  001146                     __end_ofi2___awmod:
  3979                           	opt stack 0
  3980                           pclatu	equ	0xFFB
  3981                           pclath	equ	0xFFA
  3982                           tblptru	equ	0xFF8
  3983                           tblptrh	equ	0xFF7
  3984                           tblptrl	equ	0xFF6
  3985                           tablat	equ	0xFF5
  3986                           prodh	equ	0xFF4
  3987                           prodl	equ	0xFF3
  3988                           intcon	equ	0xFF2
  3989                           intcon2	equ	0xFF1
  3990                           intcon3	equ	0xFF0
  3991                           postinc0	equ	0xFEE
  3992                           fsr0h	equ	0xFEA
  3993                           fsr0l	equ	0xFE9
  3994                           wreg	equ	0xFE8
  3995                           fsr1h	equ	0xFE2
  3996                           fsr1l	equ	0xFE1
  3997                           bsr	equ	0xFE0
  3998                           fsr2h	equ	0xFDA
  3999                           fsr2l	equ	0xFD9
  4000                           status	equ	0xFD8
  4001                           
  4002 ;; *************** function i2___awdiv *****************
  4003 ;; Defined at:
  4004 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  dividend        2    0[COMRAM] int 
  4007 ;;  divisor         2    2[COMRAM] int 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  __awdiv         2    6[COMRAM] int 
  4010 ;;  __awdiv         1    5[COMRAM] unsigned char 
  4011 ;;  __awdiv         1    4[COMRAM] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  2    0[COMRAM] int 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4021 ;;      Params:         4       0       0       0       0       0       0       0       0
  4022 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4024 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4025 ;;Total ram usage:        8 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_LowPriorityISR
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text23
  4035  000FE2                     __ptext23:
  4036                           	opt stack 0
  4037  000FE2                     i2___awdiv:
  4038                           	opt stack 23
  4039                           
  4040                           ;incstack = 0
  4041  000FE2  0E00               	movlw	0
  4042  000FE4  6E06               	movwf	i2___awdiv@sign,c
  4043  000FE6  AE04               	btfss	i2___awdiv@divisor+1,7,c
  4044  000FE8  D006               	goto	i2l414
  4045  000FEA  6C03               	negf	i2___awdiv@divisor,c
  4046  000FEC  1E04               	comf	i2___awdiv@divisor+1,f,c
  4047  000FEE  B0D8               	btfsc	status,0,c
  4048  000FF0  2A04               	incf	i2___awdiv@divisor+1,f,c
  4049  000FF2  0E01               	movlw	1
  4050  000FF4  6E06               	movwf	i2___awdiv@sign,c
  4051  000FF6                     i2l414:
  4052  000FF6  AE02               	btfss	i2___awdiv@dividend+1,7,c
  4053  000FF8  D006               	goto	i2l415
  4054  000FFA  6C01               	negf	i2___awdiv@dividend,c
  4055  000FFC  1E02               	comf	i2___awdiv@dividend+1,f,c
  4056  000FFE  B0D8               	btfsc	status,0,c
  4057  001000  2A02               	incf	i2___awdiv@dividend+1,f,c
  4058  001002  0E01               	movlw	1
  4059  001004  1A06               	xorwf	i2___awdiv@sign,f,c
  4060  001006                     i2l415:
  4061  001006  0E00               	movlw	0
  4062  001008  6E08               	movwf	i2___awdiv@quotient+1,c
  4063  00100A  0E00               	movlw	0
  4064  00100C  6E07               	movwf	i2___awdiv@quotient,c
  4065  00100E  5003               	movf	i2___awdiv@divisor,w,c
  4066  001010  1004               	iorwf	i2___awdiv@divisor+1,w,c
  4067  001012  B4D8               	btfsc	status,2,c
  4068  001014  D01C               	goto	i2l422
  4069  001016  0E01               	movlw	1
  4070  001018  6E05               	movwf	i2___awdiv@counter,c
  4071  00101A  D004               	goto	i2l417
  4072  00101C  90D8               	bcf	status,0,c
  4073  00101E  3603               	rlcf	i2___awdiv@divisor,f,c
  4074  001020  3604               	rlcf	i2___awdiv@divisor+1,f,c
  4075  001022  2A05               	incf	i2___awdiv@counter,f,c
  4076  001024                     i2l417:
  4077  001024  AE04               	btfss	i2___awdiv@divisor+1,7,c
  4078  001026  D7FA               	goto	i2l418
  4079  001028                     i2u110_40:
  4080  001028  90D8               	bcf	status,0,c
  4081  00102A  3607               	rlcf	i2___awdiv@quotient,f,c
  4082  00102C  3608               	rlcf	i2___awdiv@quotient+1,f,c
  4083  00102E  5003               	movf	i2___awdiv@divisor,w,c
  4084  001030  5C01               	subwf	i2___awdiv@dividend,w,c
  4085  001032  5004               	movf	i2___awdiv@divisor+1,w,c
  4086  001034  5802               	subwfb	i2___awdiv@dividend+1,w,c
  4087  001036  A0D8               	btfss	status,0,c
  4088  001038  D005               	goto	i2l421
  4089  00103A  5003               	movf	i2___awdiv@divisor,w,c
  4090  00103C  5E01               	subwf	i2___awdiv@dividend,f,c
  4091  00103E  5004               	movf	i2___awdiv@divisor+1,w,c
  4092  001040  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  4093  001042  8007               	bsf	i2___awdiv@quotient,0,c
  4094  001044                     i2l421:
  4095  001044  90D8               	bcf	status,0,c
  4096  001046  3204               	rrcf	i2___awdiv@divisor+1,f,c
  4097  001048  3203               	rrcf	i2___awdiv@divisor,f,c
  4098  00104A  2E05               	decfsz	i2___awdiv@counter,f,c
  4099  00104C  D7ED               	goto	i2u110_40
  4100  00104E                     i2l422:
  4101  00104E  5006               	movf	i2___awdiv@sign,w,c
  4102  001050  B4D8               	btfsc	status,2,c
  4103  001052  D004               	goto	i2l423
  4104  001054  6C07               	negf	i2___awdiv@quotient,c
  4105  001056  1E08               	comf	i2___awdiv@quotient+1,f,c
  4106  001058  B0D8               	btfsc	status,0,c
  4107  00105A  2A08               	incf	i2___awdiv@quotient+1,f,c
  4108  00105C                     i2l423:
  4109  00105C  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  4110  001060  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  4111  001064  0012               	return	
  4112  001066                     __end_ofi2___awdiv:
  4113                           	opt stack 0
  4114                           pclatu	equ	0xFFB
  4115                           pclath	equ	0xFFA
  4116                           tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           prodh	equ	0xFF4
  4121                           prodl	equ	0xFF3
  4122                           intcon	equ	0xFF2
  4123                           intcon2	equ	0xFF1
  4124                           intcon3	equ	0xFF0
  4125                           postinc0	equ	0xFEE
  4126                           fsr0h	equ	0xFEA
  4127                           fsr0l	equ	0xFE9
  4128                           wreg	equ	0xFE8
  4129                           fsr1h	equ	0xFE2
  4130                           fsr1l	equ	0xFE1
  4131                           bsr	equ	0xFE0
  4132                           fsr2h	equ	0xFDA
  4133                           fsr2l	equ	0xFD9
  4134                           status	equ	0xFD8
  4135                           
  4136 ;; *************** function i2_WriteDataXLCD *****************
  4137 ;; Defined at:
  4138 ;;		line 449 in file "nxlcd.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  data            1    wreg     unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  data            1    0[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0
  4153 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4155 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4156 ;;Total ram usage:        1 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    1
  4159 ;; This function calls:
  4160 ;;		i2_DelayFor18TCY
  4161 ;; This function is called by:
  4162 ;;		_LowPriorityISR
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text24
  4167  00134E                     __ptext24:
  4168                           	opt stack 0
  4169  00134E                     i2_WriteDataXLCD:
  4170                           	opt stack 22
  4171                           
  4172                           ;incstack = 0
  4173                           ;i2WriteDataXLCD@data stored from wreg
  4174  00134E  6E01               	movwf	i2WriteDataXLCD@data,c
  4175                           
  4176                           ;nxlcd.c: 464: TRISD &= 0x0f;
  4177  001350  0E0F               	movlw	15
  4178  001352  1695               	andwf	3989,f,c	;volatile
  4179                           
  4180                           ;nxlcd.c: 465: PORTD &= 0x0f;
  4181  001354  0E0F               	movlw	15
  4182  001356  1683               	andwf	3971,f,c	;volatile
  4183                           
  4184                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  4185  001358  5001               	movf	i2WriteDataXLCD@data,w,c
  4186  00135A  0BF0               	andlw	240
  4187  00135C  1283               	iorwf	3971,f,c	;volatile
  4188                           
  4189                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  4190  00135E  808D               	bsf	3981,0,c	;volatile
  4191                           
  4192                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  4193  001360  948D               	bcf	3981,2,c	;volatile
  4194                           
  4195                           ;nxlcd.c: 474: DelayFor18TCY();
  4196  001362  EC50  F00A         	call	i2_DelayFor18TCY	;wreg free
  4197                           
  4198                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  4199  001366  828D               	bsf	3981,1,c	;volatile
  4200                           
  4201                           ;nxlcd.c: 476: DelayFor18TCY();
  4202  001368  EC50  F00A         	call	i2_DelayFor18TCY	;wreg free
  4203                           
  4204                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  4205  00136C  928D               	bcf	3981,1,c	;volatile
  4206                           
  4207                           ;nxlcd.c: 479: PORTD &= 0x0f;
  4208  00136E  0E0F               	movlw	15
  4209  001370  1683               	andwf	3971,f,c	;volatile
  4210                           
  4211                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  4212  001372  3801               	swapf	i2WriteDataXLCD@data,w,c
  4213  001374  0BF0               	andlw	240
  4214  001376  0BF0               	andlw	240
  4215  001378  1283               	iorwf	3971,f,c	;volatile
  4216                           
  4217                           ;nxlcd.c: 485: DelayFor18TCY();
  4218  00137A  EC50  F00A         	call	i2_DelayFor18TCY	;wreg free
  4219                           
  4220                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  4221  00137E  828D               	bsf	3981,1,c	;volatile
  4222                           
  4223                           ;nxlcd.c: 487: DelayFor18TCY();
  4224  001380  EC50  F00A         	call	i2_DelayFor18TCY	;wreg free
  4225                           
  4226                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  4227  001384  928D               	bcf	3981,1,c	;volatile
  4228                           
  4229                           ;nxlcd.c: 490: TRISD |= 0xf0;
  4230  001386  0EF0               	movlw	240
  4231  001388  1295               	iorwf	3989,f,c	;volatile
  4232  00138A  0012               	return	
  4233  00138C                     __end_ofi2_WriteDataXLCD:
  4234                           	opt stack 0
  4235                           pclatu	equ	0xFFB
  4236                           pclath	equ	0xFFA
  4237                           tblptru	equ	0xFF8
  4238                           tblptrh	equ	0xFF7
  4239                           tblptrl	equ	0xFF6
  4240                           tablat	equ	0xFF5
  4241                           prodh	equ	0xFF4
  4242                           prodl	equ	0xFF3
  4243                           intcon	equ	0xFF2
  4244                           intcon2	equ	0xFF1
  4245                           intcon3	equ	0xFF0
  4246                           postinc0	equ	0xFEE
  4247                           fsr0h	equ	0xFEA
  4248                           fsr0l	equ	0xFE9
  4249                           wreg	equ	0xFE8
  4250                           fsr1h	equ	0xFE2
  4251                           fsr1l	equ	0xFE1
  4252                           bsr	equ	0xFE0
  4253                           fsr2h	equ	0xFDA
  4254                           fsr2l	equ	0xFD9
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function i2_WriteCmdXLCD *****************
  4258 ;; Defined at:
  4259 ;;		line 388 in file "nxlcd.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  cmd             1    wreg     unsigned char 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  cmd             1    0[COMRAM] unsigned char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0
  4274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4276 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4277 ;;Total ram usage:        1 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    1
  4280 ;; This function calls:
  4281 ;;		i2_DelayFor18TCY
  4282 ;; This function is called by:
  4283 ;;		_LowPriorityISR
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text25
  4288  00138C                     __ptext25:
  4289                           	opt stack 0
  4290  00138C                     i2_WriteCmdXLCD:
  4291                           	opt stack 22
  4292                           
  4293                           ;incstack = 0
  4294                           ;i2WriteCmdXLCD@cmd stored from wreg
  4295  00138C  6E01               	movwf	i2WriteCmdXLCD@cmd,c
  4296                           
  4297                           ;nxlcd.c: 403: TRISD &= 0x0f;
  4298  00138E  0E0F               	movlw	15
  4299  001390  1695               	andwf	3989,f,c	;volatile
  4300                           
  4301                           ;nxlcd.c: 404: PORTD &= 0x0f;
  4302  001392  0E0F               	movlw	15
  4303  001394  1683               	andwf	3971,f,c	;volatile
  4304                           
  4305                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  4306  001396  5001               	movf	i2WriteCmdXLCD@cmd,w,c
  4307  001398  0BF0               	andlw	240
  4308  00139A  1283               	iorwf	3971,f,c	;volatile
  4309                           
  4310                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  4311  00139C  948D               	bcf	3981,2,c	;volatile
  4312                           
  4313                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  4314  00139E  908D               	bcf	3981,0,c	;volatile
  4315                           
  4316                           ;nxlcd.c: 413: DelayFor18TCY();
  4317  0013A0  EC50  F00A         	call	i2_DelayFor18TCY	;wreg free
  4318                           
  4319                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  4320  0013A4  828D               	bsf	3981,1,c	;volatile
  4321                           
  4322                           ;nxlcd.c: 415: DelayFor18TCY();
  4323  0013A6  EC50  F00A         	call	i2_DelayFor18TCY	;wreg free
  4324                           
  4325                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  4326  0013AA  928D               	bcf	3981,1,c	;volatile
  4327                           
  4328                           ;nxlcd.c: 418: PORTD &= 0x0f;
  4329  0013AC  0E0F               	movlw	15
  4330  0013AE  1683               	andwf	3971,f,c	;volatile
  4331                           
  4332                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  4333  0013B0  3801               	swapf	i2WriteCmdXLCD@cmd,w,c
  4334  0013B2  0BF0               	andlw	240
  4335  0013B4  0BF0               	andlw	240
  4336  0013B6  1283               	iorwf	3971,f,c	;volatile
  4337                           
  4338                           ;nxlcd.c: 424: DelayFor18TCY();
  4339  0013B8  EC50  F00A         	call	i2_DelayFor18TCY	;wreg free
  4340                           
  4341                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  4342  0013BC  828D               	bsf	3981,1,c	;volatile
  4343                           
  4344                           ;nxlcd.c: 426: DelayFor18TCY();
  4345  0013BE  EC50  F00A         	call	i2_DelayFor18TCY	;wreg free
  4346                           
  4347                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  4348  0013C2  928D               	bcf	3981,1,c	;volatile
  4349                           
  4350                           ;nxlcd.c: 429: TRISD |= 0xf0;
  4351  0013C4  0EF0               	movlw	240
  4352  0013C6  1295               	iorwf	3989,f,c	;volatile
  4353  0013C8  0012               	return	
  4354  0013CA                     __end_ofi2_WriteCmdXLCD:
  4355                           	opt stack 0
  4356                           pclatu	equ	0xFFB
  4357                           pclath	equ	0xFFA
  4358                           tblptru	equ	0xFF8
  4359                           tblptrh	equ	0xFF7
  4360                           tblptrl	equ	0xFF6
  4361                           tablat	equ	0xFF5
  4362                           prodh	equ	0xFF4
  4363                           prodl	equ	0xFF3
  4364                           intcon	equ	0xFF2
  4365                           intcon2	equ	0xFF1
  4366                           intcon3	equ	0xFF0
  4367                           postinc0	equ	0xFEE
  4368                           fsr0h	equ	0xFEA
  4369                           fsr0l	equ	0xFE9
  4370                           wreg	equ	0xFE8
  4371                           fsr1h	equ	0xFE2
  4372                           fsr1l	equ	0xFE1
  4373                           bsr	equ	0xFE0
  4374                           fsr2h	equ	0xFDA
  4375                           fsr2l	equ	0xFD9
  4376                           status	equ	0xFD8
  4377                           
  4378 ;; *************** function i2_DelayFor18TCY *****************
  4379 ;; Defined at:
  4380 ;;		line 12 in file "nxlcd.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		i2_WriteCmdXLCD
  4404 ;;		i2_WriteDataXLCD
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text26
  4409  0014A0                     __ptext26:
  4410                           	opt stack 0
  4411  0014A0                     i2_DelayFor18TCY:
  4412                           	opt stack 22
  4413                           
  4414                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4415                           
  4416                           ;incstack = 0
  4417  0014A0  0E21               	movlw	33
  4418  0014A2                     i2u172_47:
  4419  0014A2  2EE8               	decfsz	wreg,f,c
  4420  0014A4  D7FE               	bra	i2u172_47
  4421  0014A6  F000               	nop	
  4422  0014A8  0012               	return		;funcret
  4423  0014AA                     __end_ofi2_DelayFor18TCY:
  4424                           	opt stack 0
  4425                           pclatu	equ	0xFFB
  4426                           pclath	equ	0xFFA
  4427                           tblptru	equ	0xFF8
  4428                           tblptrh	equ	0xFF7
  4429                           tblptrl	equ	0xFF6
  4430                           tablat	equ	0xFF5
  4431                           prodh	equ	0xFF4
  4432                           prodl	equ	0xFF3
  4433                           intcon	equ	0xFF2
  4434                           intcon2	equ	0xFF1
  4435                           intcon3	equ	0xFF0
  4436                           postinc0	equ	0xFEE
  4437                           fsr0h	equ	0xFEA
  4438                           fsr0l	equ	0xFE9
  4439                           wreg	equ	0xFE8
  4440                           fsr1h	equ	0xFE2
  4441                           fsr1l	equ	0xFE1
  4442                           bsr	equ	0xFE0
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           pclatu	equ	0xFFB
  4447                           pclath	equ	0xFFA
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           intcon	equ	0xFF2
  4455                           intcon2	equ	0xFF1
  4456                           intcon3	equ	0xFF0
  4457                           postinc0	equ	0xFEE
  4458                           fsr0h	equ	0xFEA
  4459                           fsr0l	equ	0xFE9
  4460                           wreg	equ	0xFE8
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           bsr	equ	0xFE0
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8
  4467                           
  4468                           	psect	rparam
  4469  0000                     pclatu	equ	0xFFB
  4470                           pclath	equ	0xFFA
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           prodh	equ	0xFF4
  4476                           prodl	equ	0xFF3
  4477                           intcon	equ	0xFF2
  4478                           intcon2	equ	0xFF1
  4479                           intcon3	equ	0xFF0
  4480                           postinc0	equ	0xFEE
  4481                           fsr0h	equ	0xFEA
  4482                           fsr0l	equ	0xFE9
  4483                           wreg	equ	0xFE8
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           bsr	equ	0xFE0
  4487                           fsr2h	equ	0xFDA
  4488                           fsr2l	equ	0xFD9
  4489                           status	equ	0xFD8
  4490                           
  4491                           	psect	temp
  4492  000043                     btemp:
  4493                           	opt stack 0
  4494  000043                     	ds	1
  4495  0000                     int$flags	set	btemp
  4496  0000                     wtemp6	set	btemp+1
  4497                           pclatu	equ	0xFFB
  4498                           pclath	equ	0xFFA
  4499                           tblptru	equ	0xFF8
  4500                           tblptrh	equ	0xFF7
  4501                           tblptrl	equ	0xFF6
  4502                           tablat	equ	0xFF5
  4503                           prodh	equ	0xFF4
  4504                           prodl	equ	0xFF3
  4505                           intcon	equ	0xFF2
  4506                           intcon2	equ	0xFF1
  4507                           intcon3	equ	0xFF0
  4508                           postinc0	equ	0xFEE
  4509                           fsr0h	equ	0xFEA
  4510                           fsr0l	equ	0xFE9
  4511                           wreg	equ	0xFE8
  4512                           fsr1h	equ	0xFE2
  4513                           fsr1l	equ	0xFE1
  4514                           bsr	equ	0xFE0
  4515                           fsr2h	equ	0xFDA
  4516                           fsr2l	equ	0xFD9
  4517                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      66
    BANK0           160     65      78
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[9]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighPriorityISR in COMRAM

    _HighPriorityISR->___llmod

Critical Paths under _LowPriorityISR in COMRAM

    _LowPriorityISR->i2___awdiv

Critical Paths under _main in BANK0

    _main->_setTemperaturaAmbiente
    _setTemperaturaAmbiente->___lldiv
    ___lldiv->___lmul
    _putsXLCD->_WriteDataXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _HighPriorityISR in BANK0

    _HighPriorityISR->i1___lldiv

Critical Paths under _LowPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriorityISR in BANK1

    None.

Critical Paths under _LowPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriorityISR in BANK2

    None.

Critical Paths under _LowPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriorityISR in BANK3

    None.

Critical Paths under _LowPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriorityISR in BANK4

    None.

Critical Paths under _LowPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriorityISR in BANK5

    None.

Critical Paths under _LowPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriorityISR in BANK6

    None.

Critical Paths under _LowPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriorityISR in BANK7

    None.

Critical Paths under _LowPriorityISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4583
                                             55 BANK0     10    10      0
                           _OpenXLCD
                       _WriteCmdXLCD
                            ___lldiv
                             ___lmul
                           _putsXLCD
             _setTemperaturaAmbiente
 ---------------------------------------------------------------------------------
 (1) _setTemperaturaAmbiente                               4     4      0    2094
                                             51 BANK0      4     4      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     522
                                             26 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1526
                                             38 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     241
                                             27 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                             26 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     110
                                             27 BANK0      1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                             26 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                             26 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriorityISR                                     21    21      0    2454
                                              5 BANK0     21    21      0
                            ___awdiv
                            ___awmod
                            ___llmod
                     i1_WriteCmdXLCD
                    i1_WriteDataXLCD
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (5) i1___lldiv                                           13     5      8     451
                                             28 COMRAM     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) i1_WriteDataXLCD                                      1     1      0      44
                                             28 COMRAM     1     1      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) i1_WriteCmdXLCD                                       1     1      0      44
                                             28 COMRAM     1     1      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (6) i1_DelayFor18TCY                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     615
                                             28 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     648
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     652
                                             28 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowPriorityISR                                      20    20      0     892
                                              8 COMRAM    20    20      0
                     i2_WriteCmdXLCD
                    i2_WriteDataXLCD
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (8) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i2___awdiv                                            8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) i2_WriteDataXLCD                                      1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (8) i2_WriteCmdXLCD                                       1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i2_DelayFor18TCY                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _setTemperaturaAmbiente
     ___lldiv
       ___lmul (ARG)
     ___lmul

 _HighPriorityISR (ROOT)
   ___awdiv
   ___awmod
   ___llmod
   i1_WriteCmdXLCD
     i1_DelayFor18TCY
   i1_WriteDataXLCD
     i1_DelayFor18TCY
   i1___lldiv

 _LowPriorityISR (ROOT)
   i2_WriteCmdXLCD
     i2_DelayFor18TCY
   i2_WriteDataXLCD
     i2_DelayFor18TCY
   i2___awdiv
   i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      4E       5       48.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      42       1       70.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      20        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 20 17:35:59 2024

                             l83 0C74                               l86 0C76  
                   ___awdiv@sign 0022                               bsr 000FE0  
                            l200 0E34                              l203 0E44  
                            l214 13F0                              l150 0902  
                            l231 1426                              l232 1406  
                            l152 0A36                              l146 08C6  
                            l147 0900                              l191 0E04  
                            l185 0DE8                              l601 0EBA  
                            l194 0E14                              l602 0EC8  
                            l258 11BE                              l259 11D2  
                            l197 0E24                              l597 0E86  
                            l598 0E7A                              u820 0CB8  
                            u830 0DF2                              u780 0E8A  
        __end_of_HighPriorityISR 030C                              _aux 002E  
          __size_of_WriteCmdXLCD 0044                     ___awmod@sign 0022  
                            wreg 000FE8                     __CFG_FOSC$HS 000000  
            i2WriteDataXLCD@data 0001                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             l2404 0944  
                           l1834 0C64                             l2394 08F0  
                           l1844 0CB8                             STR_1 0801  
                           STR_2 080D                             u1420 0944  
                  __CFG_DEBUG$ON 000000                             u1647 0870  
                           u1657 088A                             u1667 146C  
                           u1677 1480                             u1687 148E  
                           i1l93 02B4                             i1l95 01BA  
                           i1l98 01C2                i1___lldiv@divisor 0021  
                           _main 0818                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0043  
              i1___lldiv@counter 0064           __size_of_WriteDataXLCD 0044  
                           prodh 000FF4                             prodl 000FF3  
                           start 030C                ??i1_WriteDataXLCD 001D  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                   _WriteCmdXLCD 128E                 ?i2_DelayFor18TCY 0001  
                  ?_SetDDRamAddr 0001                            ?_main 0001  
                __end_of___awdiv 0FE2                  __end_of___awmod 10D6  
                __end_of___lldiv 0EDA                            _T0CON 000FD5  
                ___awdiv@divisor 001F                  __end_of___llmod 11AC  
        __size_ofi2_WriteCmdXLCD 003E                            i1l101 01D4  
                          i1l110 0206                            i1l104 01E6  
                          i1l113 0214                            i1l122 0284  
                          i1l131 02AC                            i1l107 01F4  
                          i1l116 026A                            i1l125 0296  
                          i1l119 0272                            i1l128 02A4  
                          i1l421 0FC0                            i1l422 0FCA  
                          i1l414 0F72                            i1l430 109C  
                          i1l423 0FD8                            i1l415 0F82  
                          i1l431 1094                            i1l417 0FA0  
                          i1l601 0F3E                            i1l418 0F98  
                          i1l434 10B4                            i1l602 0F4C  
                          i1l435 10BE                            i1l427 107A  
                          i1l611 118C                            i2l140 0BEE  
                          i1l436 10CC                            i1l428 1086  
                          i1l612 119A                            i1l607 1164  
                          i1l608 1158                            i2l138 0B66  
                          i2l421 1044                            i2l422 104E  
                          i2l414 0FF6                            i2l430 110C  
                          i2l423 105C                            i2l415 1006  
                          i2l431 1104                            i2l417 1024  
                          i2l418 101C                            i2l434 1124  
                          i2l435 112E                            i2l427 10EA  
                          i2l436 113C                            i2l428 10F6  
                          i1l597 0F0A                            i1l598 0EFE  
                ___awdiv@counter 0021                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _SPBRG 000FAF  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                            _TXREG 000FAD  
            ___lmul@multiplicand 007E         ??_setTemperaturaAmbiente 0093  
             i1___lldiv@dividend 001D                            pclath 000FFA  
                          tablat 000FF5                            status 000FD8  
                          wtemp6 0044               __size_ofi1___lldiv 0084  
             __size_ofi2___awdiv 0084               __size_ofi2___awmod 0070  
                __initialization 143A                     __end_of_main 0A98  
               __end_of_BusyXLCD 1404               i1___lldiv@quotient 0060  
             __size_of_DelayXLCD 0014            __size_of_DelayPORXLCD 0014  
                 ??_SetDDRamAddr 007A                   i1_WriteCmdXLCD 1310  
               __end_of_OpenXLCD 0E56                           ??_main 0097  
                  __activetblptr 000001                    _WriteDataXLCD 124A  
               ?_HighPriorityISR 0001         __size_ofi1_DelayFor18TCY 000A  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                 ___llmod@dividend 001D  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
               ___awdiv@dividend 001D                 ??_LowPriorityISR 0009  
       __size_ofi2_WriteDataXLCD 003E                           _SPBRGH 000FB0  
                   _DelayPORXLCD 1478                           ___lmul 11AC  
                      ??___awdiv 0021                        ??___awmod 0021  
                      ??___lldiv 008E                        ??___llmod 0025  
                         _dezena 0036           __end_ofi1_WriteCmdXLCD 134E  
                         _milhar 003E                           clear_0 1440  
                         clear_1 144C                 ___awdiv@quotient 0023  
                ___awmod@divisor 001F                  ___awmod@counter 0021  
                 ?_WriteDataXLCD 0001                   i2___awdiv@sign 0006  
              __end_ofi1___lldiv 0F5E                __end_ofi2___awdiv 1066  
              __end_ofi2___awmod 1146                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8  __size_of_setTemperaturaAmbiente 0170  
               __end_of_putsXLCD 143A                   i2___awmod@sign 0006  
              __end_of_DelayXLCD 1478                       __accesstop 0060  
        __end_of__initialization 1452                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001                  ?i1_WriteCmdXLCD 0001  
                 i2_WriteCmdXLCD 138C                  i1_WriteDataXLCD 12D2  
         __size_of_DelayFor18TCY 000A                ??i1_DelayFor18TCY 001D  
                     __pbssBANK0 00A1                        ?_BusyXLCD 0001  
                WriteCmdXLCD@cmd 007A             __end_of_SetDDRamAddr 124A  
                      ?_OpenXLCD 0001                ??i2_WriteDataXLCD 0001  
         _setTemperaturaAmbiente 0C3A                WriteDataXLCD@data 007A  
                        ?___lmul 007A           __end_ofi2_WriteCmdXLCD 13CA  
                ??_WriteDataXLCD 007A                   ___lmul@product 0082  
                        i1u95_20 0FA4                       ??_BusyXLCD 007A  
                     ??_OpenXLCD 007B                          __Hparam 0000  
                        __Lparam 0000                          ___awdiv 0F5E  
                  _DelayFor18TCY 148C                  __size_of___lmul 0058  
                        ___awmod 1066                          ___lldiv 0E56  
                        ___llmod 1146                        ?_putsXLCD 007B  
                   __psmallconst 0800                  ?i2_WriteCmdXLCD 0001  
                        __pcinit 143A                          __ramtop 0800  
                        _centena 003A                          __ptext0 0818  
                        __ptext1 0C3A                          __ptext2 11AC  
                        __ptext3 0E56                          __ptext4 1404  
                        __ptext5 124A                          __ptext6 0DAA  
                        __ptext7 128E                          __ptext8 1204  
                        __ptext9 1464          __end_ofi1_WriteDataXLCD 1310  
               ___awmod@dividend 001D         __size_ofi2_DelayFor18TCY 000A  
                        _tempMin 00A9                          _valorAD 00AA  
                        _unidade 0032                   __pintcode_body 0A98  
           end_of_initialization 1452                          int_func 0A98  
                ___lldiv@divisor 008A                  ___lldiv@counter 0092  
                      _RCSTAbits 000FAB                   ?_DelayFor18TCY 0001  
                        postinc0 000FEE                       ??_putsXLCD 007D  
                      _PORTCbits 000F82                       _unidadeDes 0026  
                      _TRISAbits 000F92                        _TRISCbits 000F94  
                      _TRISEbits 000F96                        i1___lldiv 0EDA  
          __size_of_SetDDRamAddr 0046                        i2___awdiv 0FE2  
                      i2___awmod 10D6         __size_of_HighPriorityISR 02F4  
                      _TXSTAbits 000FAC               i2___awdiv@dividend 0001  
                      _DelayXLCD 1464                 ??i1_WriteCmdXLCD 001D  
                 __end_of___lmul 1204                      _BAUDCONbits 000FB8  
                   _SetDDRamAddr 1204                  i1_DelayFor18TCY 1496  
               ?i1_WriteDataXLCD 0001               SetDDRamAddr@DDaddr 007A  
            start_initialization 143A               i2___awdiv@quotient 0007  
                     ?i1___lldiv 001D                       ?i2___awdiv 0001  
                     ?i2___awmod 0001                  i2_WriteDataXLCD 134E  
              ??i2_DelayFor18TCY 0001                  ___llmod@divisor 0021  
        ?_setTemperaturaAmbiente 0001                __size_of_BusyXLCD 003A  
                ___llmod@counter 0025                       ?_DelayXLCD 0001  
                ??_DelayFor18TCY 007A          __size_of_LowPriorityISR 0C32  
              __size_of_OpenXLCD 00AC                         ??___lmul 0082  
                  ?_WriteCmdXLCD 0001                      __pbssCOMRAM 0026  
                  __pcstackBANK0 0060   __end_of_setTemperaturaAmbiente 0DAA  
              ??_HighPriorityISR 0065                   putsXLCD@buffer 007B  
               ??i2_WriteCmdXLCD 0001                        __pintcode 0008  
        __end_ofi1_DelayFor18TCY 14A0                   ??_WriteCmdXLCD 007A  
                       ?___awdiv 001D                         ?___awmod 001D  
                       ?___lldiv 0086                         ?___llmod 001D  
                      _dezenaDes 002A                      __pintcodelo 0018  
              __size_of_putsXLCD 0036            __end_of_WriteDataXLCD 128E  
                    __smallconst 0800          __end_ofi2_WriteDataXLCD 138C  
            i1WriteDataXLCD@data 001D                      ??i1___lldiv 0025  
                      _leituraAD 00A5                      ??i2___awdiv 0005  
                    ??i2___awmod 0005                         _LATEbits 000F8D  
                    ??_DelayXLCD 007A                    ?_DelayPORXLCD 0001  
                       i1u101_20 10A0                         i1u105_20 1168  
                       i1u148_20 0F0E                         i2u110_40 1028  
                       i1u169_27 1498                         i2u116_40 1110  
                       i2u170_47 0AF6                         i2u171_47 0B7E  
                       i2u172_47 14A2                  OpenXLCD@lcdtype 007B  
                       _RCONbits 000FD0                       _ADCON0bits 000FC2  
                      main@index 009F                i2___awdiv@divisor 0003  
              i2___awdiv@counter 0005                ___lmul@multiplier 007A  
                    _INTCON2bits 000FF1                      _INTCON3bits 000FF0  
             i2___awmod@dividend 0001                         _BusyXLCD 13CA  
                 ??_DelayPORXLCD 007A                         _OpenXLCD 0DAA  
                       __Hrparam 0000                   _LowPriorityISR 0008  
                       __Lrparam 0000                     __Lsmallconst 0800  
               ?i1_DelayFor18TCY 0001                 __size_of___awdiv 0084  
               __size_of___awmod 0070                 __size_of___lldiv 0084  
               __size_of___llmod 0066                  i2_DelayFor18TCY 14A0  
               ?i2_WriteDataXLCD 0001                     _tempDesejada 0042  
                       __ptext10 1478                         __ptext11 13CA  
                       __ptext20 0F5E                         __ptext12 148C  
                       __ptext22 10D6                         __ptext14 0EDA  
                       __ptext23 0FE2                         __ptext15 12D2  
                       __ptext24 134E                         __ptext16 1310  
                       __ptext25 138C                         __ptext17 1496  
                       __ptext26 14A0                         __ptext18 1146  
                       __ptext19 1066      setTemperaturaAmbiente@index 0095  
           __end_of_WriteCmdXLCD 12D2                    __size_of_main 0280  
         __end_of_LowPriorityISR 0C3A                         int$flags 0043  
                       _putsXLCD 1404            __CFG_CPUDIV$OSC1_PLL2 000000  
              i2___awmod@divisor 0003                i2___awmod@counter 0005  
                     _INTCONbits 000FF2                  _HighPriorityISR 0018  
              i1WriteCmdXLCD@cmd 001D         __size_ofi1_WriteDataXLCD 003E  
                       intlevel1 0000                         intlevel2 0000  
               ___lldiv@dividend 0086                  ?_LowPriorityISR 0001  
          __end_of_DelayFor18TCY 1496          __end_ofi2_DelayFor18TCY 14AA  
        __size_ofi1_WriteCmdXLCD 003E             __end_of_DelayPORXLCD 148C  
               ___lldiv@quotient 008E                      _resultadoAD 00A1  
              i2WriteCmdXLCD@cmd 0001  
